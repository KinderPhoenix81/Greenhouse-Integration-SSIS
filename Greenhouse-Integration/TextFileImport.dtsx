<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/15/2025 11:51:57 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PERSONAL-DESKTO"
  DTS:CreatorName="PERSONAL-DESKTO\Alex"
  DTS:DTSID="{919FADB6-5229-454D-8F3C-27E5D2CE2438}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="17.0.1008.3"
  DTS:LocaleID="1033"
  DTS:ObjectName="TextFileImport"
  DTS:PackageType="5"
  DTS:VersionBuild="42"
  DTS:VersionGUID="{45EB2FB8-FB4A-41D0-8B9E-716BD1264C14}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Employee File Connection]"
      DTS:CreationName="FLATFILE"
      DTS:Description="Connection to a flat file of employee data"
      DTS:DTSID="{E13BA300-32E9-489C-8701-3AB4E1992D3B}"
      DTS:ObjectName="Employee File Connection">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::Conn_EmployeeFile]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ImportFiles\EmployeesData_Import.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="25"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="FirstName"
              DTS:DTSID="{FE6B109C-4FCD-44C1-BDF2-C7CC2F3F5B60}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="25"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="LastName"
              DTS:DTSID="{A23719FC-58A1-49B9-B2ED-C34B55FC4293}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Phone"
              DTS:DTSID="{DA2A78B3-7A8E-4BD7-8ED8-D505843CAB6B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Email"
              DTS:DTSID="{F903476E-54A5-4B5D-B471-DD7265523EBB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="DateOfBirth"
              DTS:DTSID="{4CCA5948-7A6B-48F6-9054-F402BC52BE98}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="EmploymentStatus"
              DTS:DTSID="{3F153C67-C52B-4F41-9273-86FF299738EB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="OnDuty"
              DTS:DTSID="{885E5B3B-CB62-4F48-9CD7-D82087BB925B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Opener"
              DTS:DTSID="{B1BD7806-FAF2-482D-B43D-20C0F68E9E58}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Closer"
              DTS:DTSID="{30D9CD84-3C35-4169-BC89-E41E30703553}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Wage"
              DTS:DTSID="{8EE86100-B0F2-4410-9B03-1FB37F32342D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Position"
              DTS:DTSID="{2D4C9579-8CEC-412D-860A-7614C9C8BDE1}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Greenhouse SQL Conn]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{8A384E64-5D44-4118-82DE-EBE4DEAF0D2E}"
      DTS:ObjectName="Greenhouse SQL Conn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=PERSONAL-DESKTO;Initial Catalog=Greenhouse;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-Package1-{8A384E64-5D44-4118-82DE-EBE4DEAF0D2E}PERSONAL-DESKTO.Greenhouse;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Product File Connection]"
      DTS:CreationName="FLATFILE"
      DTS:Description="File connection for product info"
      DTS:DTSID="{3D8ED4E2-C2A5-41BF-A984-ACADEB2D0E1A}"
      DTS:ObjectName="Product File Connection">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\Alex\Documents\GreenhouseIntegrationProject-AlexAllen\_ImportFiles\ProductItems_Unique.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ProductName"
              DTS:DTSID="{F292738B-1D2A-4A7F-BA6D-8F6EDFAF2A03}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Category"
              DTS:DTSID="{CE6CA4A4-114A-4798-B43A-32CA82E09AB9}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="OrderCost"
              DTS:DTSID="{D4B9820D-F58F-476E-9629-5A0DC929D5D0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="PurchasePrice"
              DTS:DTSID="{FB48FBB0-6A51-4334-A1E2-55C3F1105A0B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="QuantityInStock"
              DTS:DTSID="{78A6B617-2A8E-48D9-93E9-96C40AA087C8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Perishable"
              DTS:DTSID="{E8809DA8-0CBD-4932-B504-8F13AD0ACF30}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="InStock"
              DTS:DTSID="{D6D618E0-A92F-4102-9ACC-4D7DC93860BB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="ClearanceItem"
              DTS:DTSID="{01B9C985-3CD7-487F-8E0D-0F4A5E26FE2D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="SeasonalItem"
              DTS:DTSID="{5E651B35-6DD3-44EF-A58C-9A6DF23BC350}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{4B19006F-40A2-48FD-8744-1ED7A09F0019}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::BaseFolderParam] + &quot;_ImportFiles\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BaseFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ImportFiles\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1958865F-5183-4B13-B32F-29937D766A7A}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::BaseFolder] + &quot;EmployeesData_Import.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Conn_EmployeeFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ImportFiles\EmployeesData_Import.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{172F66D2-5DF8-4216-B835-6BFE4B38F836}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::BaseFolder] + &quot;ProductItems_Unique.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Conn_ProductFile">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ImportFiles\ProductItems_Unique.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{E3FB52D3-507B-4097-91AB-EACE9E1C266E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::BaseFolder] + &quot;..\\_SummaryLogs\\ImportSummaryLog&quot; + (DT_STR,4,1252)Year(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Month(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Day(GetDate()) + &quot;--&quot; + (DT_STR,2,1252)DatePart(&quot;Hour&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Minute&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Second&quot;, GetDate()) + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="Conn_SummaryLog">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ImportFiles\..\_SummaryLogs\ImportSummaryLog2025.10.21--15_4_46.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8F7C0160-BE22-4EFF-9DC7-3D47541AFA73}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EmployeeRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C4AB00E1-2270-4A43-AB74-D8D3203470BD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{29AA792C-7CE3-4436-B1F1-7708ADC7094B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProductRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6F1C22DA-FE4B-40DE-B650-CBB23187CAEE}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RuntimeEnd">
      <DTS:VariableValue
        DTS:DataType="7">10/20/2025 10:47:54 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{231764D0-192A-48F2-8DC5-725BC8123D91}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RuntimeStart">
      <DTS:VariableValue
        DTS:DataType="7">10/20/2025 10:47:43 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Import Files Into SQL Server"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{1CADDC36-4C0C-4A2C-BE9F-A21B5F56D47A}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Import Files Into SQL Server"
      DTS:TransactionOption="2">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Import Files Into SQL Server\Import Employee Data"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{A3599611-EAD5-4F7E-9850-96FE47EBD0C8}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import Employee Data"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Employee Data File"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Employee File Connection]"
                      connectionManagerRefId="Package.ConnectionManagers[Employee File Connection]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[FirstName]"
                          length="25"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[FirstName]"
                          name="FirstName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[LastName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[LastName]"
                          length="25"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[LastName]"
                          name="LastName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Phone]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Phone]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Phone]"
                          name="Phone"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Email]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Email]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Email]"
                          name="Email"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[DateOfBirth]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[DateOfBirth]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[DateOfBirth]"
                          name="DateOfBirth"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[EmploymentStatus]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[EmploymentStatus]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[EmploymentStatus]"
                          name="EmploymentStatus"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[OnDuty]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[OnDuty]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[OnDuty]"
                          name="OnDuty"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Opener]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Opener]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Opener]"
                          name="Opener"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Closer]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Closer]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Closer]"
                          name="Closer"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Wage]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Wage]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Wage]"
                          name="Wage"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Position]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Position]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Position]"
                          name="Position"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[FirstName]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[LastName]"
                          codePage="1252"
                          dataType="str"
                          length="25"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Phone]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Phone" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Email]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Email" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[DateOfBirth]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="DateOfBirth" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[EmploymentStatus]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="EmploymentStatus" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[OnDuty]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="OnDuty" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Opener]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Opener" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Closer]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Closer" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Wage]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Wage" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].ExternalColumns[Position]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Position" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Import Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Employee Import Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::EmployeeRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Import Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Import Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Import Files Into SQL Server\Import Employee Data\Employee Import Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="Employee Table in SQL Server"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Employees]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=17.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Greenhouse SQL Conn]"
                      connectionManagerRefId="Package.ConnectionManagers[Greenhouse SQL Conn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].Columns[Phone]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Phone"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Phone]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].Columns[DateOfBirth]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="DateOfBirth"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[DateOfBirth]"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[DateOfBirth]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].Columns[OnDuty]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="OnDuty"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[OnDuty]"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[OnDuty]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].Columns[Opener]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Opener"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Opener]"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Opener]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].Columns[Closer]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Closer"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Closer]"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Closer]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].Columns[Wage]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Wage"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Wage]"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Wage]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].Columns[FirstName_converted]"
                          cachedDataType="wstr"
                          cachedLength="25"
                          cachedName="FirstName_converted"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[FirstName_converted]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].Columns[LastName_converted]"
                          cachedDataType="wstr"
                          cachedLength="25"
                          cachedName="LastName_converted"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[LastName_converted]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].Columns[Email_converted]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Email_converted"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[Email_converted]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].Columns[EmploymentStatus_converted]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="EmploymentStatus_converted"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[EmploymentStatus]"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[EmploymentStatus_converted]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].Columns[Position_converted]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Position_converted"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[Position_converted]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          dataType="i4"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="25"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="25"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Phone]"
                          dataType="numeric"
                          name="Phone"
                          precision="15" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Email]"
                          dataType="wstr"
                          length="100"
                          name="Email" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[DateOfBirth]"
                          dataType="dbDate"
                          name="DateOfBirth" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[EmploymentStatus]"
                          dataType="wstr"
                          length="50"
                          name="EmploymentStatus" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[OnDuty]"
                          dataType="bool"
                          name="OnDuty" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Opener]"
                          dataType="bool"
                          name="Opener" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Closer]"
                          dataType="bool"
                          name="Closer" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Wage]"
                          dataType="numeric"
                          name="Wage"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input].ExternalColumns[Position]"
                          dataType="wstr"
                          length="50"
                          name="Position" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Unicode &amp; NonUnicode Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Inputs[Data Conversion Input].Columns[FirstName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="25"
                          cachedName="FirstName"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Inputs[Data Conversion Input].Columns[LastName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="25"
                          cachedName="LastName"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Inputs[Data Conversion Input].Columns[Email]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Email"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Email]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Inputs[Data Conversion Input].Columns[EmploymentStatus]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="EmploymentStatus"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[EmploymentStatus]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Inputs[Data Conversion Input].Columns[Position]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Position"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Position]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[FirstName_converted]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="25"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[FirstName_converted]"
                          name="FirstName_converted"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[FirstName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[LastName_converted]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="25"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[LastName_converted]"
                          name="LastName_converted"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[LastName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[Email_converted]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="100"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[Email_converted]"
                          name="Email_converted"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Email]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[EmploymentStatus_converted]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[EmploymentStatus_converted]"
                          name="EmploymentStatus_converted"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[EmploymentStatus]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[Position_converted]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output].Columns[Position_converted]"
                          name="Position_converted"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output].Columns[Position]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Import Files Into SQL Server\Import Employee Data.Paths[Data Conversion Output]"
                  endId="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Import Files Into SQL Server\Import Employee Data.Paths[Flat File Source Output]"
                  endId="Package\Import Files Into SQL Server\Import Employee Data\Employee Import Row Count.Inputs[Row Count Input 1]"
                  name="Flat File Source Output"
                  startId="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Import Files Into SQL Server\Import Employee Data.Paths[Row Count Output 1]"
                  endId="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion.Inputs[Data Conversion Input]"
                  name="Row Count Output 1"
                  startId="Package\Import Files Into SQL Server\Import Employee Data\Employee Import Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Import Files Into SQL Server\Import Product Data"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{B3752BE6-C44A-47BF-8475-A4B9A47AA19C}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Import Product Data"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ProductItems]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=17.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Greenhouse SQL Conn]"
                      connectionManagerRefId="Package.ConnectionManagers[Greenhouse SQL Conn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[OrderCost]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="OrderCost"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OrderCost]"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[OrderCost]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[PurchasePrice]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="PurchasePrice"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PurchasePrice]"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[PurchasePrice]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[QuantityInStock]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="QuantityInStock"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInStock]"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[QuantityInStock]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Perishable]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Perishable"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Perishable]"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[Perishable]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[InStock]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="InStock"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[InStock]"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[InStock]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClearanceItem]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ClearanceItem"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClearanceItem]"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[ClearanceItem]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SeasonalItem]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="SeasonalItem"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SeasonalItem]"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[SeasonalItem]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ProductName_converted]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ProductName_converted"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Output].Columns[ProductName_converted]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Category_converted]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Category_converted"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Category]"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Output].Columns[Category_converted]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductID]"
                          dataType="i4"
                          name="ProductID" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProductName]"
                          dataType="wstr"
                          length="50"
                          name="ProductName" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Category]"
                          dataType="wstr"
                          length="50"
                          name="Category" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[OrderCost]"
                          dataType="numeric"
                          name="OrderCost"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[PurchasePrice]"
                          dataType="numeric"
                          name="PurchasePrice"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[QuantityInStock]"
                          dataType="i4"
                          name="QuantityInStock" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Perishable]"
                          dataType="bool"
                          name="Perishable" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[InStock]"
                          dataType="bool"
                          name="InStock" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClearanceItem]"
                          dataType="bool"
                          name="ClearanceItem" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SeasonalItem]"
                          dataType="bool"
                          name="SeasonalItem" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1033"
                  name="Product Flat File"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[Product File Connection]"
                      connectionManagerRefId="Package.ConnectionManagers[Product File Connection]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[ProductName]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[ProductName]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[ProductName]"
                          name="ProductName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[Category]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[Category]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[Category]"
                          name="Category"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[OrderCost]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[OrderCost]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[OrderCost]"
                          name="OrderCost"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[PurchasePrice]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[PurchasePrice]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[PurchasePrice]"
                          name="PurchasePrice"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[QuantityInStock]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[QuantityInStock]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[QuantityInStock]"
                          name="QuantityInStock"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[Perishable]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[Perishable]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[Perishable]"
                          name="Perishable"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[InStock]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[InStock]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[InStock]"
                          name="InStock"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[ClearanceItem]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[ClearanceItem]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[ClearanceItem]"
                          name="ClearanceItem"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[SeasonalItem]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[SeasonalItem]"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[SeasonalItem]"
                          name="SeasonalItem"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[ProductName]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ProductName" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[Category]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Category" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[OrderCost]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="OrderCost" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[PurchasePrice]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="PurchasePrice" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[QuantityInStock]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="QuantityInStock" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[Perishable]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Perishable" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[InStock]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="InStock" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[ClearanceItem]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="ClearanceItem" />
                        <externalMetadataColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].ExternalColumns[SeasonalItem]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="SeasonalItem" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1252"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import Files Into SQL Server\Import Product Data\Product Import Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Product Import Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::ProductRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Import Files Into SQL Server\Import Product Data\Product Import Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Product Data\Product Import Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Import Files Into SQL Server\Import Product Data\Product Import Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Unicode &amp; NonUnicode Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Inputs[Data Conversion Input].Columns[ProductName]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="ProductName"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[ProductName]" />
                        <inputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Inputs[Data Conversion Input].Columns[Category]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Category"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[Category]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Output].Columns[ProductName_converted]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Output].Columns[ProductName_converted]"
                          name="ProductName_converted"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[ProductName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Output].Columns[Category_converted]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Output].Columns[Category_converted]"
                          name="Category_converted"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output].Columns[Category]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Import Files Into SQL Server\Import Product Data.Paths[Data Conversion Output]"
                  endId="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Import Files Into SQL Server\Import Product Data.Paths[Flat File Source Output]"
                  endId="Package\Import Files Into SQL Server\Import Product Data\Product Import Row Count.Inputs[Row Count Input 1]"
                  name="Flat File Source Output"
                  startId="Package\Import Files Into SQL Server\Import Product Data\Product Flat File.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Import Files Into SQL Server\Import Product Data.Paths[Row Count Output 1]"
                  endId="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion.Inputs[Data Conversion Input]"
                  name="Row Count Output 1"
                  startId="Package\Import Files Into SQL Server\Import Product Data\Product Import Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Print Summary Log"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{9879BB13-4861-4FBF-8664-324AC7455CD5}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Print Summary Log"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_8c932391ce5b41e897d70582543c21c9"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskID,System::TaskName,User::Conn_EmployeeFile,User::Conn_ProductFile,User::Conn_SummaryLog,User::EmployeeRowCount,System::MachineName,System::PackageName,User::ProductRowCount,User::RuntimeEnd,User::RuntimeStart,System::UserName"
          ReadWriteVariables="User::LogMessage">
          <ProjectItem
            Name="ST_8c932391ce5b41e897d70582543c21c9.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{614c2cb8-644e-4b3f-83ad-1b9b1df05ef3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_8c932391ce5b41e897d70582543c21c9</RootNamespace>
    <AssemblyName>ST_8c932391ce5b41e897d70582543c21c9</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8c932391ce5b41e897d70582543c21c9.Properties.Settings.get_Default():ST_8c932391ce5b41e897d70582543c21c9.Properties.Sett" +
    "ings")]

namespace ST_8c932391ce5b41e897d70582543c21c9.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;

#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion
#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_8c932391ce5b41e897d70582543c21c9
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Try to create a log file and append some data
            try
            {
                //Variables for execution details
                string logFilePath = Dts.Variables["User::Conn_SummaryLog"].Value.ToString();
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                DateTime startTime = (DateTime)Dts.Variables["User::RuntimeStart"].Value;
                DateTime endTime = (DateTime)Dts.Variables["User::RuntimeEnd"].Value;
                TimeSpan runTimeDiff = endTime - startTime;
                string machine = Dts.Variables["System::MachineName"].Value.ToString();
                string taskName = Dts.Variables["System::TaskName"].Value.ToString();
                string taskID = Dts.Variables["System::TaskID"].Value.ToString();
                string userName = Dts.Variables["System::UserName"].Value.ToString();

                //Variables for the count of exports per table
                int employeeCount = (int)Dts.Variables["EmployeeRowCount"].Value;
                int productCount = (int)Dts.Variables["ProductRowCount"].Value;

                //Create a log message
                string logMessage = $"========================================\nGreenhouse Management - Import Log\n========================================\n" +
                         $"------------------------------\nImport Details\n------------------------------\n" +
                         $"Employees Imported: {employeeCount}\n" +
                         $"Products Imported: {productCount}\n\n" +
                         $"----------------------------------------\n" +
                         $"Execution Details\n----------------------------------------\n" +
                         $"Opeartion Duration: {runTimeDiff.TotalSeconds.ToString()} Seconds\n" +
                         $"Operation Started: {startTime:HH:mm:ss}\n" +
                         $"Operation Ended: {endTime:HH:mm:ss}\n" +
                         $"Opeartion Executed By: {userName}\n" +
                         $"Package: {packageName} ran on {machine}\n" +
                         $"Task Name: {taskName}\n" +
                         $"Task ID: {taskID}\n";

                //Append the text to the file
                File.AppendAllText(logFilePath, logMessage);

                //Script task was successful
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                //Perform an error
                Dts.Events.FireError(0, "Logging Script", ex.Message, "", 0);
                //Script task failed
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_8c932391ce5b41e897d70582543c21c9</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_8c932391ce5b41e897d70582543c21c9</msb:DisplayName>
    <msb:ProjectId>{5EAAEBF6-B2BA-4A9C-83B8-FA9D07F4D7C5}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_8c932391ce5b41e897d70582543c21c9.csproj" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_8c932391ce5b41e897d70582543c21c9")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_8c932391ce5b41e897d70582543c21c9")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8c932391ce5b41e897d70582543c21c9.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8c932391ce5b41e897d70582543c21c9.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_8c932391ce5b41e897d70582543c21c9.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_8c932391ce5b41e897d70582543c21c9.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_8c932391ce5b41e897d70582543c21c9.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_8c932391ce5b41e897d70582543c21c9.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAK7Z92gAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAApjYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFQ2AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArBYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
NgAAAAAAAEgAAAACAAUAVCMAAEgSAAABAAAAAAAAAJw1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgBzAgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyLQAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnJVAABw
bxIAAApvEwAACqUPAAABDAIoEAAACm8RAAAKcnsAAHBvEgAACm8TAAAKpQ8AAAENCQgoFQAAChME
AigQAAAKbxEAAApynQAAcG8SAAAKbxMAAApvFAAAChMFAigQAAAKbxEAAApyxQAAcG8SAAAKbxMA
AApvFAAAChMGAigQAAAKbxEAAApy5wAAcG8SAAAKbxMAAApvFAAAChMHAigQAAAKbxEAAApyBQEA
cG8SAAAKbxMAAApvFAAAChMIAigQAAAKbxEAAApyJwEAcG8SAAAKbxMAAAqlHgAAARMJAigQAAAK
bxEAAApySQEAcG8SAAAKbxMAAAqlHgAAARMKHxONHwAAASUWcmkBAHCiJRdy8AIAcBEJjB4AAAEo
FgAACqIlGHIiAwBwEQqMHgAAASgWAAAKoiUZclQDAHCiJRoSBCgXAAAKEwwSDCgYAAAKoiUbckcE
AHCiJRxyWwQAcAiMDwAAASgWAAAKoiUdcp0EAHAJjA8AAAEoFgAACqIlHnLbBABwoiUfCREIoiUf
CnILBQBwoiUfCweiJR8MciEFAHCiJR8NEQWiJR8OcjMFAHCiJR8PEQaiJR8Qck0FAHCiJR8REQei
JR8ScmMFAHCiKBkAAAoTCwYRCygaAAAKAigQAAAKFm8bAAAK3jQTDQIoEAAACm8cAAAKFnJnBQBw
EQ1vHQAACnKFBQBwFm8eAAAKJgIoEAAAChdvGwAACt4AKgBBHAAAAAAAAAAAAAA+AgAAPgIAADQA
AAARAAABHgIoHwAACioeAiggAAAKKq5+AQAABC0ecocFAHDQAwAAAighAAAKbyIAAApzIwAACoAB
AAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKCQAAAoqLnMIAAAGgAMAAAQqAABCU0pC
AQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAkBAAAI34AAJAEAAAEBgAAI1N0cmluZ3MA
AAAAlAoAAPwFAAAjVVMAkBAAABAAAAAjR1VJRAAAAKAQAACoAQAAI0Jsb2IAAAAAAAAAAgAAAVcd
ogEJAwAAAPoBMwAWAAABAAAAJQAAAAUAAAAGAAAACQAAAAEAAAAkAAAAAgAAABAAAAABAAAAAgAA
AAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAApgMBAAAAAAAGAFYCxwQGAOUCxwQGAKIBowQPADsF
AAAGAM8BPAQGADkCPAQGABoCPAQGAMwCPAQGAHYCPAQGAI8CPAQGAOYBPAQGAAECEwMKAKoCVQMK
ACEBVQMGAMMA1wMGAO8D1wMGAE4E1wMGAN4D1wMGAIUBowQGAMcF1wMGAGgE5wQGAFgEGAQOAFUB
kAMOALYBkAMOAD0BAwQGAGoBxwQKAH4DVQMSAH0FzAASAIoAzAAGAAEA1wMGAC8D1wMGAJMA1wMG
AL4ANAAKAHgEVQMGAOwA1wMGAJoA1wMGAPsFPAQAAAAAKwAAAAAAAQABAAEAEAD4AwcAOQABAAEA
AAAQAO4ESgVRAAEAAwAAARAAhwVKBWUAAwAHAAMBAACgBQAASQAEAAoAEQDjA6kAEQARAa0AEQBu
ALEABgZdALUAVoCQBbgAVoDxALgAUCAAAAAAhgD+AwYAAQDsIgAAAACGGJYEBgABAPQiAAAAAIMY
lgQGAAEA/CIAAAAAkwhkBLwAAQAoIwAAAACTCPkAwQABAC8jAAAAAJMIBQHGAAEANyMAAAAAlgjO
BcwAAgA+IwAAAACGGJYEBgACAEYjAAAAAJEYnATRAAIAAAABAA0DCQCWBAEAEQCWBAYAGQCWBAoA
KQCWBBAAMQCWBBAAOQCWBBAAQQCWBBAASQCWBBAAUQCWBBAAWQCWBBAAYQCWBBAAaQCWBAYAmQCW
BAYAwQCWBBUA0QCWBAYAcQCYBTAA2QB5BTUA4QDOAzoA6QADA0AAoQAtA0QAeQAtBEgA+QDABVEA
gQC2BFcAAQEtA0QA+QC5BVsACQHpBWEA2QDaBQEA2QCuBWcAiQB+AEQAEQGMBG0AcQCWBAYAoQCW
BAYAGQGsAHYAGQH3BX8AqQCWBIUAyQCWBAYACAAUAJ8ACAAYAKQAKQBzAAwBLgALAOQALgATAO0A
LgAbAAwBLgAjABUBLgArAD4BLgAzAD4BLgA7AD4BLgBDABUBLgBLAEQBLgBTAD4BLgBbAFsBQwBj
AKQASQBzAAwBYQB7AKQAYwBrAKQAGwADAAEABAADAAAAaATVAAAAGQHaAAAA0gXfAAIABAADAAIA
BQAFAAEABgAFAAIABwAHAASAAAABAAAA0SQvYwAAAAAAAAcAAAAEAAAAAAAAAAAAAACNAGUAAAAA
ABAAAAAAAAAAAAAAAJYANgMAAAAABAAAAAAAAAAAAAAAjQDXAwAAAAAQAAAAAAAAAAAAAACWAD4A
AAAAAAAAAAABAAAA+AQAAAUAAgAAAAAAAEludDMyAFNUXzhjOTMyMzkxY2U1YjQxZTg5N2Q3MDU4
MjU0M2MyMWM5ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBtc2NvcmxpYgBkZWZhdWx0SW5zdGFuY2UAZ2V0X01lc3NhZ2UAVmFyaWFibGUA
RG91YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUARGF0ZVRpbWUA
TWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUA
c2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVy
YXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRy
aWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNz
ZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5
Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBp
bGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2Vt
Ymx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQBB
c3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAZ2V0
X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcATWljcm9zb2Z0
LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlw
dFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUXzhjOTMyMzkx
Y2U1YjQxZTg5N2Q3MDU4MjU0M2MyMWM5LmRsbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNvdXJj
ZU1hbgBUaW1lU3BhbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9i
YWxpemF0aW9uAG9wX1N1YnRyYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEV4Y2VwdGlvbgBDdWx0
dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIARmlyZUVycm9y
AC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAZ2V0X1RvdGFsU2Vjb25kcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfOGM5MzIzOTFjZTVi
NDFlODk3ZDcwNTgyNTQzYzIxYzkuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNUXzhjOTMyMzkxY2U1YjQxZTg5N2Q3MDU4MjU0M2MyMWM5LlByb3BlcnRpZXMA
Z2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRf
RXZlbnRzAENvbmNhdABGb3JtYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AEFw
cGVuZEFsbFRleHQAZ2V0X0Fzc2VtYmx5AAArVQBzAGUAcgA6ADoAQwBvAG4AbgBfAFMAdQBtAG0A
YQByAHkATABvAGcAACdTAHkAcwB0AGUAbQA6ADoAUABhAGMAawBhAGcAZQBOAGEAbQBlAAAlVQBz
AGUAcgA6ADoAUgB1AG4AdABpAG0AZQBTAHQAYQByAHQAACFVAHMAZQByADoAOgBSAHUAbgB0AGkA
bQBlAEUAbgBkAAAnUwB5AHMAdABlAG0AOgA6AE0AYQBjAGgAaQBuAGUATgBhAG0AZQAAIVMAeQBz
AHQAZQBtADoAOgBUAGEAcwBrAE4AYQBtAGUAAB1TAHkAcwB0AGUAbQA6ADoAVABhAHMAawBJAEQA
ACFTAHkAcwB0AGUAbQA6ADoAVQBzAGUAcgBOAGEAbQBlAAAhRQBtAHAAbABvAHkAZQBlAFIAbwB3
AEMAbwB1AG4AdAAAH1AAcgBvAGQAdQBjAHQAUgBvAHcAQwBvAHUAbgB0AACBhT0APQA9AD0APQA9
AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0A
PQA9AD0APQA9AD0ACgBHAHIAZQBlAG4AaABvAHUAcwBlACAATQBhAG4AYQBnAGUAbQBlAG4AdAAg
AC0AIABJAG0AcABvAHIAdAAgAEwAbwBnAAoAPQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0A
PQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQAKAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAAoA
SQBtAHAAbwByAHQAIABEAGUAdABhAGkAbABzAAoALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ACgABMUUAbQBwAGwAbwB5AGUAZQBzACAA
SQBtAHAAbwByAHQAZQBkADoAIAB7ADAAfQAKAAAxUAByAG8AZAB1AGMAdABzACAASQBtAHAAbwBy
AHQAZQBkADoAIAB7ADAAfQAKAAoAAIDxLQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAKAEUAeABlAGMA
dQB0AGkAbwBuACAARABlAHQAYQBpAGwAcwAKAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ACgBPAHAA
ZQBhAHIAdABpAG8AbgAgAEQAdQByAGEAdABpAG8AbgA6ACAAARMgAFMAZQBjAG8AbgBkAHMACgAA
QU8AcABlAHIAYQB0AGkAbwBuACAAUwB0AGEAcgB0AGUAZAA6ACAAewAwADoASABIADoAbQBtADoA
cwBzAH0ACgAAPU8AcABlAHIAYQB0AGkAbwBuACAARQBuAGQAZQBkADoAIAB7ADAAOgBIAEgAOgBt
AG0AOgBzAHMAfQAKAAAvTwBwAGUAYQByAHQAaQBvAG4AIABFAHgAZQBjAHUAdABlAGQAIABCAHkA
OgAgAAAVCgBQAGEAYwBrAGEAZwBlADoAIAAAESAAcgBhAG4AIABvAG4AIAAAGQoAVABhAHMAawAg
AE4AYQBtAGUAOgAgAAAVCgBUAGEAcwBrACAASQBEADoAIAAAAwoAAB1MAG8AZwBnAGkAbgBnACAA
UwBjAHIAaQBwAHQAAAEAcVMAVABfADgAYwA5ADMAMgAzADkAMQBjAGUANQBiADQAMQBlADgAOQA3
AGQANwAwADUAOAAyADUANAAzAGMAMgAxAGMAOQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAAAAALd8IeiaAXEGQY3l8LJlhnAAEIAEBCAMgAAEFIAEBEREEIAEBDgUg
AQERXRQHDg4OET0RPRFBDg4ODggIDg0SRQQgABJtBCAAEnEFIAESdRwDIAAcAyAADggAAhFBET0R
PQUAAg4OHAMgAA0FAAEOHQ4FAAIBDg4FIAASgIkIIAUCCA4ODggIAAESgI0RgJEFIAASgJUHIAIB
DhKAlQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJVAwYSWQMGEhACBggDBhEUBAAAElUE
AAASWQUAAQESWQQAABIQAwAAAQQIABJVBAgAElkECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5v
bkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfOGM5MzIzOTFjZTViNDFlODk3ZDcwNTgy
NTQzYzIxYzkAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNQAASQEAGi5ORVRGcmFtZXdvcmss
VmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcA
AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAA
AAAAAFBBRFBBRFC0AAAAfDYAAAAAAAAAAAAAljYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIg2
AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAC9j0SQAAAEAL2PRJD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AOABjADkAMwAyADMAOQAxAGMAZQA1AGIANAAxAGUAOAA5ADcAZAA3ADAANQA4ADIANQA0
ADMAYwAyADEAYwA5AAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
NAAyADUALgAyADUAMwA5ADEAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AOABjADkAMwAyADMAOQAxAGMAZQA1AGIANAAxAGUAOAA5ADcAZAA3ADAANQA4ADIANQA0ADMA
YwAyADEAYwA5AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwA4AGMAOQAzADIAMwA5ADEAYwBlADUAYgA0ADEAZQA4ADkANwBkADcAMAA1ADgA
MgA1ADQAMwBjADIAMQBjADkALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AOABjADkAMwAyADMAOQAxAGMAZQA1AGIANAAxAGUAOAA5ADcAZAA3ADAANQA4ADIA
NQA0ADMAYwAyADEAYwA5AAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADQAMgA1AC4AMgA1ADMAOQAxAAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADQAMgA1AC4AMgA1ADMAOQAxAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAKg2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set RuntimeEnd Variable"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{D6689A9F-8989-4191-A846-C1E1ED678D10}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set RuntimeEnd Variable"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_1f3f002d8ff54d6091a3e1b3eb43853c"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::RuntimeEnd">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ST_1f3f002d8ff54d6091a3e1b3eb43853c.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c75ee8a0-c590-4f31-980c-580f30e5fa50}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_1f3f002d8ff54d6091a3e1b3eb43853c</RootNamespace>
    <AssemblyName>ST_1f3f002d8ff54d6091a3e1b3eb43853c</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_1f3f002d8ff54d6091a3e1b3eb43853c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // Set the runtime end variable
            Dts.Variables["User::RuntimeEnd"].Value = DateTime.Now;
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_1f3f002d8ff54d6091a3e1b3eb43853c</msb:CodeName>
    <msb:DisplayName>ST_1f3f002d8ff54d6091a3e1b3eb43853c</msb:DisplayName>
    <msb:ProjectId>{29385518-4B2D-4619-8C91-EE408024E5BB}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_1f3f002d8ff54d6091a3e1b3eb43853c.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1f3f002d8ff54d6091a3e1b3eb43853c.Properties.Settings.get_Default():ST_1f3f002d8ff54d6091a3e1b3eb43853c.Properties.Sett" +
    "ings")]

namespace ST_1f3f002d8ff54d6091a3e1b3eb43853c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_1f3f002d8ff54d6091a3e1b3eb43853c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_1f3f002d8ff54d6091a3e1b3eb43853c")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1f3f002d8ff54d6091a3e1b3eb43853c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1f3f002d8ff54d6091a3e1b3eb43853c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_1f3f002d8ff54d6091a3e1b3eb43853c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_1f3f002d8ff54d6091a3e1b3eb43853c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_1f3f002d8ff54d6091a3e1b3eb43853c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_1f3f002d8ff54d6091a3e1b3eb43853c.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPQC92gAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAii0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADgtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAkA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABs
LQAAAAAAAEgAAAACAAUA6CAAAJgLAAABAAAAAAAAAIAsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMYCKBAAAApvEQAACnIBAABwbxIAAAooEwAACowbAAABbxQA
AAoCKBAAAAoWbxUAAAoqHgIoFgAACioeAigXAAAKKq5+AQAABC0eciMAAHDQAwAAAigYAAAKbxkA
AApzGgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKBsAAAoqLnMIAAAGgAMA
AAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAvAMAACN+AAAoBAAAZAUAACNT
dHJpbmdzAAAAAIwJAACYAAAAI1VTACQKAAAQAAAAI0dVSUQAAAA0CgAAZAEAACNCbG9iAAAAAAAA
AAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAAB4AAAAFAAAABgAAAAkAAAABAAAAGwAAAAIAAAAQAAAA
AgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAdQMBAAAAAAAGAC4CRQQGAL0CRQQGAHoBMgQP
ALkEAAAGAKcB8wMGABEC8wMGAPIB8wMGAKQC8wMGAE4C8wMGAGcC8wMGAL4B8wMGANkB6wIKAIIC
JAMKAPkAJAMGAK0DpgMGAF0BMgQGACwFpgMGABUEZQQGAAUE3gMOAC0BXwMOAI4BXwMOABUByQMG
AEIBRQQKAE0DJAMSAPsEpAASAG4ApAAGAJsApgMGAMQApgMGAHcApgMGAFoF8wMAAAAAAQAAAAAA
AQABAAEAEAC+AzoAOQABAAEAAAAQAGwEyARFAAEAAwAAARAABQXIBFkAAwAHAAMBAAAeBQAAPQAE
AAoAEQCyA2QAEQDpAGgAEQBeAGwABgYpAHAAVoAOBXMAVoDJAHMAUCAAAAAAhgDEAwYAAQCCIAAA
AACGGCUEBgABAIogAAAAAIMYJQQGAAEAkiAAAAAAkwgRBHcAAQC+IAAAAACTCNEAfAABAMUgAAAA
AJMI3QCBAAEAzSAAAAAAlggzBYcAAgDUIAAAAACGGCUEBgACANwgAAAAAJEYKwSMAAIAAAABAOUC
CQAlBAEAEQAlBAYAGQAlBAoAKQAlBBAAMQAlBBAAOQAlBBAAQQAlBBAASQAlBBAAUQAlBBAAWQAl
BBAAYQAlBBAAaQAlBAYAgQAlBAYAqQAlBBUAuQAlBAYAcQAWBRsAwQD3BCAAyQCdAyUA2QBOBSsA
0QDbAjAAwQA/BQEAcQAlBAYAiQAlBAYA4QCJADUA4QBWBTwAkQAlBEEAsQAlBAYACAAUAFoACAAY
AF8AKQBzAMcALgALAJ8ALgATAKgALgAbAMcALgAjANAALgArAPkALgAzAPkALgA7APkALgBDANAA
LgBLAP8ALgBTAPkALgBbABYBQwBjAF8ASQBzAMcAYQB7AF8AYwBrAF8AAwABAAQAAwAAABUEkAAA
APEAlQAAADcFmgACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAANAkkqAAAAAAAAA6AAAA
BAAAAAAAAAAAAAAASAAxAAAAAAAQAAAAAAAAAAAAAABRAAUDAAAAAAQAAAAAAAAAAAAAAEgApgMA
AAAAEAAAAAAAAAAAAAAAUQAKAAAAAAAAAAAAAQAAAHYEAAAFAAIAAAAAPE1vZHVsZT4ATWljcm9z
b2Z0LlNxbFNlcnZlci5NYW5hZ2VkRFRTAHZhbHVlX18AbXNjb3JsaWIAU1RfMWYzZjAwMmQ4ZmY1
NGQ2MDkxYTNlMWIzZWI0Mzg1M2MAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5D
b21wb25lbnRNb2RlbABTVF8xZjNmMDAyZDhmZjU0ZDYwOTFhM2UxYjNlYjQzODUzYy5kbGwAZ2V0
X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzFmM2YwMDJkOGZm
NTRkNjA5MWEzZTFiM2ViNDM4NTNjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF8xZjNmMDAyZDhmZjU0ZDYwOTFhM2UxYjNlYjQzODUzYy5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2Jq
ZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AAAAIVUA
cwBlAHIAOgA6AFIAdQBuAHQAaQBtAGUARQBuAGQAAHFTAFQAXwAxAGYAMwBmADAAMAAyAGQAOABm
AGYANQA0AGQANgAwADkAMQBhADMAZQAxAGIAMwBlAGIANAAzADgANQAzAGMALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAHxQAtbQJt9KlELn498zbHAABCABAQgD
IAABBSABARERBCABAQ4FIAEBEVEEIAASYQQgABJlBSABEmkcBAAAEW0EIAEBHAYAARJxEXUEIAAS
eQYgAgEOEnkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQA
ABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzFmM2YwMDJkOGZmNTRkNjA5MWEz
ZTFiM2ViNDM4NTNjAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjUAAE0BABwuTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNy4yAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRQuTkVUIEZyYW1ld29y
ayA0LjcuMrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAABgLQAAAAAAAAAAAAB6LQAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAbC0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAkqDQJAAAAQCSoNAkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwAxAGYAMwBmADAAMAAyAGQAOABmAGYANQA0AGQANgAwADkAMQBhADMAZQAxAGIA
MwBlAGIANAAzADgANQAzAGMAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4AOQA0ADIANAAuADQAMQAxADAANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwAxAGYAMwBmADAAMAAyAGQAOABmAGYANQA0AGQANgAwADkAMQBhADMAZQAxAGIAMwBl
AGIANAAzADgANQAzAGMALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADEAZgAzAGYAMAAwADIAZAA4AGYAZgA1ADQAZAA2ADAAOQAxAGEAMwBl
ADEAYgAzAGUAYgA0ADMAOAA1ADMAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwAxAGYAMwBmADAAMAAyAGQAOABmAGYANQA0AGQANgAwADkAMQBhADMAZQAx
AGIAMwBlAGIANAAzADgANQAzAGMAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADkANAAyADQALgA0ADEAMQAwADYAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADkANAAyADQALgA0ADEAMQAwADYAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAjD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set RuntimeStart Variable"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{E3A77588-543E-4E67-BEA7-D1D874C15F73}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set RuntimeStart Variable"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_448bda549b8945158251d15af73aaf47"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::RuntimeStart">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_448bda549b8945158251d15af73aaf47.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{099c2495-6f30-4216-92e5-d58b344bd9b2}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_448bda549b8945158251d15af73aaf47</RootNamespace>
    <AssemblyName>ST_448bda549b8945158251d15af73aaf47</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_448bda549b8945158251d15af73aaf47
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // Set the runtime start variable
            Dts.Variables["User::RuntimeStart"].Value = DateTime.Now;
            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_448bda549b8945158251d15af73aaf47</msb:CodeName>
    <msb:DisplayName>ST_448bda549b8945158251d15af73aaf47</msb:DisplayName>
    <msb:ProjectId>{EA02E955-9F89-451C-8455-54DB45CC5D82}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_448bda549b8945158251d15af73aaf47.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_448bda549b8945158251d15af73aaf47.Properties.Settings.get_Default():ST_448bda549b8945158251d15af73aaf47.Properties.Sett" +
    "ings")]

namespace ST_448bda549b8945158251d15af73aaf47.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_448bda549b8945158251d15af73aaf47")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_448bda549b8945158251d15af73aaf47")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_448bda549b8945158251d15af73aaf47.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_448bda549b8945158251d15af73aaf47.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_448bda549b8945158251d15af73aaf47.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_448bda549b8945158251d15af73aaf47.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_448bda549b8945158251d15af73aaf47.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_448bda549b8945158251d15af73aaf47.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAM8C92gAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAji0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADwtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAlA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABw
LQAAAAAAAEgAAAACAAUA6CAAAJwLAAABAAAAAAAAAIQsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMYCKBAAAApvEQAACnIBAABwbxIAAAooEwAACowbAAABbxQA
AAoCKBAAAAoWbxUAAAoqHgIoFgAACioeAigXAAAKKq5+AQAABC0ecicAAHDQAwAAAigYAAAKbxkA
AApzGgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKBsAAAoqLnMIAAAGgAMA
AAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAvAMAACN+AAAoBAAAZAUAACNT
dHJpbmdzAAAAAIwJAACcAAAAI1VTACgKAAAQAAAAI0dVSUQAAAA4CgAAZAEAACNCbG9iAAAAAAAA
AAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAAB4AAAAFAAAABgAAAAkAAAABAAAAGwAAAAIAAAAQAAAA
AgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAdQMBAAAAAAAGAC4CRQQGAL0CRQQGAHoBMgQP
ALkEAAAGAKcB8wMGABEC8wMGAPIB8wMGAKQC8wMGAE4C8wMGAGcC8wMGAL4B8wMGANkB6wIKAIIC
JAMKAPkAJAMGAK0DpgMGAF0BMgQGACwFpgMGABUEZQQGAAUE3gMOAC0BXwMOAI4BXwMOABUByQMG
AEIBRQQKAE0DJAMSAPsEpAASAG4ApAAGAJsApgMGAMQApgMGAHcApgMGAFoF8wMAAAAAJQAAAAAA
AQABAAEAEAC+AwEAOQABAAEAAAAQAGwEyARFAAEAAwAAARAABQXIBFkAAwAHAAMBAAAeBQAAPQAE
AAoAEQCyA2QAEQDpAGgAEQBeAGwABgZNAHAAVoAOBXMAVoDJAHMAUCAAAAAAhgDEAwYAAQCCIAAA
AACGGCUEBgABAIogAAAAAIMYJQQGAAEAkiAAAAAAkwgRBHcAAQC+IAAAAACTCNEAfAABAMUgAAAA
AJMI3QCBAAEAzSAAAAAAlggzBYcAAgDUIAAAAACGGCUEBgACANwgAAAAAJEYKwSMAAIAAAABAOUC
CQAlBAEAEQAlBAYAGQAlBAoAKQAlBBAAMQAlBBAAOQAlBBAAQQAlBBAASQAlBBAAUQAlBBAAWQAl
BBAAYQAlBBAAaQAlBAYAgQAlBAYAqQAlBBUAuQAlBAYAcQAWBRsAwQD3BCAAyQCdAyUA2QBOBSsA
0QDbAjAAwQA/BQEAcQAlBAYAiQAlBAYA4QCJADUA4QBWBTwAkQAlBEEAsQAlBAYACAAUAFoACAAY
AF8AKQBzAMcALgALAJ8ALgATAKgALgAbAMcALgAjANAALgArAPkALgAzAPkALgA7APkALgBDANAA
LgBLAP8ALgBTAPkALgBbABYBQwBjAF8ASQBzAMcAYQB7AF8AYwBrAF8AAwABAAQAAwAAABUEkAAA
APEAlQAAADcFmgACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAANAkf6AAAAAAAAABAAAA
BAAAAAAAAAAAAAAASABVAAAAAAAQAAAAAAAAAAAAAABRAAUDAAAAAAQAAAAAAAAAAAAAAEgApgMA
AAAAEAAAAAAAAAAAAAAAUQAuAAAAAAAAAAAAAQAAAHYEAAAFAAIAAAAAU1RfNDQ4YmRhNTQ5Yjg5
NDUxNTgyNTFkMTVhZjczYWFmNDcAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5D
b21wb25lbnRNb2RlbABTVF80NDhiZGE1NDliODk0NTE1ODI1MWQxNWFmNzNhYWY0Ny5kbGwAZ2V0
X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzQ0OGJkYTU0OWI4
OTQ1MTU4MjUxZDE1YWY3M2FhZjQ3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF80NDhiZGE1NDliODk0NTE1ODI1MWQxNWFmNzNhYWY0Ny5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2Jq
ZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AAAAJVUA
cwBlAHIAOgA6AFIAdQBuAHQAaQBtAGUAUwB0AGEAcgB0AABxUwBUAF8ANAA0ADgAYgBkAGEANQA0
ADkAYgA4ADkANAA1ADEANQA4ADIANQAxAGQAMQA1AGEAZgA3ADMAYQBhAGYANAA3AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAD5rR6mCXCLQI0U9E5CuVhmAAQg
AQEIAyAAAQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAQAABFtBCABARwGAAEScRF1
BCAAEnkGIAIBDhJ5CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMG
ERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF80NDhiZGE1NDliODk0NTE1
ODI1MWQxNWFmNzNhYWY0NwAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI1AABNAQAcLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjcuMgEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUULk5FVCBGcmFt
ZXdvcmsgNC43LjK0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAZC0AAAAAAAAAAAAAfi0AAAAgAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAHAtAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAf6DQJAAAAQB/oNAkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA0ADQAOABiAGQAYQA1ADQAOQBiADgAOQA0ADUAMQA1ADgAMgA1ADEAZAAxADUA
YQBmADcAMwBhAGEAZgA0ADcAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4AOQA0ADIANAAuADQAMQAwADgANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwA0ADQAOABiAGQAYQA1ADQAOQBiADgAOQA0ADUAMQA1ADgAMgA1ADEAZAAxADUAYQBm
ADcAMwBhAGEAZgA0ADcALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADQANAA4AGIAZABhADUANAA5AGIAOAA5ADQANQAxADUAOAAyADUAMQBk
ADEANQBhAGYANwAzAGEAYQBmADQANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA0ADQAOABiAGQAYQA1ADQAOQBiADgAOQA0ADUAMQA1ADgAMgA1ADEAZAAx
ADUAYQBmADcAMwBhAGEAZgA0ADcAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADkANAAyADQALgA0ADEAMAA4ADcAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADkANAAyADQALgA0ADEAMAA4ADcAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAkD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{A1333556-F1D6-4F25-89AA-84BC5435431B}"
      DTS:From="Package\Set RuntimeStart Variable"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Import Files Into SQL Server" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{40AFEF45-1969-45DC-AAF0-C6AD3F34B8F5}"
      DTS:From="Package\Import Files Into SQL Server"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Set RuntimeEnd Variable" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{583EDB73-53E4-4B4E-BC07-1149FC91568D}"
      DTS:From="Package\Set RuntimeEnd Variable"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Print Summary Log" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="188,42"
          Id="Package\Import Files Into SQL Server\Import Employee Data"
          TopLeft="36,12" />
        <NodeLayout
          Size="177,42"
          Id="Package\Import Files Into SQL Server\Import Product Data"
          TopLeft="38,94" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="262,157"
          Size="262,200"
          Id="Package\Import Files Into SQL Server"
          TopLeft="355,151" />
        <NodeLayout
          Size="173,42"
          Id="Package\Print Summary Log"
          TopLeft="401,477" />
        <NodeLayout
          Size="202,42"
          Id="Package\Set RuntimeEnd Variable"
          TopLeft="390,401" />
        <NodeLayout
          Size="206,42"
          Id="Package\Set RuntimeStart Variable"
          TopLeft="383,49" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="486,91">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,60"
              Start="0,0"
              End="0,52.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="488.5,351">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50"
              Start="0,0"
              End="0,42.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="489.25,443">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34"
              Start="0,0"
              End="0,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Runtime variable used for summary log info,&#xA;use script to set value when package starts."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="263,56"
          Id="9aa8b6c9-0ec9-490a-bfa0-9d6698b0c158"
          TopLeft="588,42" />
        <AnnotationLayout
          Text="Print the summary log"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="146,40"
          Id="e9849e60-5ccb-479c-9548-993c386662a8"
          TopLeft="582,480" />
        <AnnotationLayout
          Text="Complete all tasks inside the container, with transactions on.&#xA;Either all imports are succesful, or they are not successful."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="348,56"
          Id="434b3245-ed6e-4a27-974c-d956b5904086"
          TopLeft="623,226" />
        <AnnotationLayout
          Text="Another runtime variable for log info, use script&#xA;to set value when imports are complete."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="280,56"
          Id="b77bb336-fbca-4680-9ed4-f03ceaf84b93"
          TopLeft="591,393" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Import Files Into SQL Server\Import Employee Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="219,42"
          Id="Package\Import Files Into SQL Server\Import Employee Data\Employee Import Row Count"
          TopLeft="289,156" />
        <NodeLayout
          Size="230,42"
          Id="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server"
          TopLeft="281,353" />
        <NodeLayout
          Size="175,42"
          Id="Package\Import Files Into SQL Server\Import Employee Data\Employee Data File"
          TopLeft="311,57" />
        <NodeLayout
          Size="252,42"
          Id="Package\Import Files Into SQL Server\Import Employee Data\Unicode &amp; NonUnicode Conversion"
          TopLeft="274,262" />
        <EdgeLayout
          Id="Package\Import Files Into SQL Server\Import Employee Data.Paths[Data Conversion Output]"
          TopLeft="398,304">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files Into SQL Server\Import Employee Data.Paths[Row Count Output 1]"
          TopLeft="399.25,198">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,64"
              Start="0,0"
              End="0,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files Into SQL Server\Import Employee Data.Paths[Flat File Source Output]"
          TopLeft="398.5,99">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Get the data from the flat file"
          ParentId="Package\Import Files Into SQL Server\Import Employee Data"
          FontInfo="{assembly:Null}"
          Size="183,40"
          Id="0d95e508-b32f-45ac-b392-fa7352e39db8"
          TopLeft="485,57" />
        <AnnotationLayout
          Text="Establish a row count for logging purposes"
          ParentId="Package\Import Files Into SQL Server\Import Employee Data"
          FontInfo="{assembly:Null}"
          Size="255,40"
          Id="3f185536-91ea-4983-89ae-666c2593e24d"
          TopLeft="502,155" />
        <AnnotationLayout
          Text="Convert the non-unicode string values in the flat file&#xA;to unicode versions for the database"
          ParentId="Package\Import Files Into SQL Server\Import Employee Data"
          FontInfo="{assembly:Null}"
          Size="304,56"
          Id="0c390c2e-48b5-4398-8011-02b6741e48d7"
          TopLeft="526,256" />
        <AnnotationLayout
          Text="Connect to the database and insert the data"
          ParentId="Package\Import Files Into SQL Server\Import Employee Data"
          FontInfo="{assembly:Null}"
          Size="262,40"
          Id="2ea83a81-72c9-47de-8f11-2e0e0caf4a7b"
          TopLeft="510,355" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files Into SQL Server\Import Employee Data\Employee Table in SQL Server">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Import Files Into SQL Server\Import Product Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="208,42"
          Id="Package\Import Files Into SQL Server\Import Product Data\Product Import Row Count"
          TopLeft="325,211" />
        <NodeLayout
          Size="159,42"
          Id="Package\Import Files Into SQL Server\Import Product Data\Product Flat File"
          TopLeft="351,116" />
        <NodeLayout
          Size="177,42"
          Id="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination"
          TopLeft="353,409" />
        <NodeLayout
          Size="278,42"
          Id="Package\Import Files Into SQL Server\Import Product Data\Unicode &amp; NonUnicode Data Conversion"
          TopLeft="297,312" />
        <EdgeLayout
          Id="Package\Import Files Into SQL Server\Import Product Data.Paths[Row Count Output 1]"
          TopLeft="432.5,253">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59"
              Start="0,0"
              End="0,51.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files Into SQL Server\Import Product Data.Paths[Flat File Source Output]"
          TopLeft="429.75,158">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Import Files Into SQL Server\Import Product Data.Paths[Data Conversion Output]"
          TopLeft="438.75,354">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Import Files Into SQL Server\Import Product Data\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>