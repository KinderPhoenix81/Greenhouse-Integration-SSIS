<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/15/2025 11:46:43 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="Build-Desktop"
  DTS:CreatorName="BuildUser"
  DTS:DTSID="{21758B8C-4BEE-4D43-A04F-4E4F3ECF34C2}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="17.0.1008.3"
  DTS:LocaleID="1033"
  DTS:ObjectName="TextFileExport"
  DTS:PackageType="5"
  DTS:VersionBuild="67"
  DTS:VersionGUID="{4E123E38-07AF-48E7-873F-F78E40598D98}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[EmployeesExport]"
      DTS:CreationName="FLATFILE"
      DTS:Description="Data of employees table"
      DTS:DTSID="{6FFB5CFD-B6A9-4A14-8E02-FACFC24D0D7F}"
      DTS:ObjectName="EmployeesExport">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ConnStr_Employees]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ExportFiles\EmployeesData_2025.10.21--15_2_32.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="EmployeeID"
              DTS:DTSID="{740F7048-F61D-444E-92AF-4486CFE3C2CE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="25"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="FirstName"
              DTS:DTSID="{6DB51BE1-9951-4881-8B79-8EE63A0691F4}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="25"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="LastName"
              DTS:DTSID="{80F63865-64E0-4300-A9DF-5D5ECE53990E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="15"
              DTS:TextQualified="True"
              DTS:ObjectName="Phone"
              DTS:DTSID="{32025380-0316-4B43-A904-FFB7C7961C90}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="100"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Email"
              DTS:DTSID="{0BBD4A07-4090-4EAC-B360-B598F2B8919A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="DateOfBirth"
              DTS:DTSID="{739C6053-7EDC-4D77-AE19-ADB8C0C5DEBA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="EmploymentStatus"
              DTS:DTSID="{D0B9F631-788A-4EC2-AE7F-B4691FD0E92C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="OnDuty"
              DTS:DTSID="{26A976D7-63F6-45FD-B1E3-9986DE34FA79}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="Opener"
              DTS:DTSID="{BF928026-C2A1-4943-90FE-3D45E07522A2}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="Closer"
              DTS:DTSID="{78A281C3-199A-4BDA-A769-B295D526BBF8}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="5"
              DTS:DataScale="2"
              DTS:TextQualified="True"
              DTS:ObjectName="Wage"
              DTS:DTSID="{071D5C46-9977-48C3-B8C0-95D9086417C0}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Position"
              DTS:DTSID="{AA0C5994-8664-4290-BD6D-D99835CDC919}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[InvoicesExport]"
      DTS:CreationName="FLATFILE"
      DTS:Description="Exports invoices data to flat file"
      DTS:DTSID="{B1303D0F-ED30-4485-AB72-AA5BB4895476}"
      DTS:ObjectName="InvoicesExport">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ConnStr_Invoices]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ExportFiles\InvoicesData_2025.10.21--15_2_32.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="InvoiceID"
              DTS:DTSID="{C679ED34-F1FD-48B9-8804-8BD839270D06}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="8"
              DTS:DataScale="2"
              DTS:TextQualified="True"
              DTS:ObjectName="InvoiceTotal"
              DTS:DTSID="{D6E86023-17B6-4B74-A2AC-DC0407162CDA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="InvoiceDate"
              DTS:DTSID="{CDEE1EFD-2D5B-4003-AF9F-88FD409DB8B3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="InvoiceDueDate"
              DTS:DTSID="{E52095B3-8DCF-4FA9-A681-D52BC0DC0864}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="Paid"
              DTS:DTSID="{7D531665-6D8E-4C22-AB81-E123AD0F4926}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[OrdersExport]"
      DTS:CreationName="FLATFILE"
      DTS:Description="Export order data to flat file"
      DTS:DTSID="{A140811E-28B9-49C7-AAE4-B2CD8DB01727}"
      DTS:ObjectName="OrdersExport">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ConnStr_Orders]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ExportFiles\OrdersData_2025.10.21--15_2_32.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="OrderID"
              DTS:DTSID="{14D1DB66-9339-4A1F-A652-2CA9A0F1CF81}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="8"
              DTS:DataScale="2"
              DTS:TextQualified="True"
              DTS:ObjectName="OrderTotal"
              DTS:DTSID="{BED3D898-5694-47C6-A406-1D8ED2F2E474}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="133"
              DTS:TextQualified="True"
              DTS:ObjectName="OrderDate"
              DTS:DTSID="{B43B827C-BDBB-41C6-8F2E-18565B9FE83E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="Received"
              DTS:DTSID="{C7CB59CA-7B99-4DAD-9A99-55CA285BEA91}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[ProductsExport]"
      DTS:CreationName="FLATFILE"
      DTS:Description="Exports product data to a flat file"
      DTS:DTSID="{8CD2DA42-3892-4A86-AAE7-4ECC92C9C87F}"
      DTS:ObjectName="ProductsExport">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::ConnStr_Products]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ExportFiles\ProductsData_2025.10.21--15_2_32.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="ProductID"
              DTS:DTSID="{777CC89E-6698-49BC-A898-29E270C79A8A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="ProductName"
              DTS:DTSID="{870D72C6-81AD-45C4-8FC9-E60A588075EF}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="130"
              DTS:TextQualified="True"
              DTS:ObjectName="Category"
              DTS:DTSID="{4BFBEF82-B045-4C1A-BFE1-D1AD7E462167}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="5"
              DTS:DataScale="2"
              DTS:TextQualified="True"
              DTS:ObjectName="OrderCost"
              DTS:DTSID="{DAE24321-D003-4E7F-85F6-3B9384F7C73D}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="131"
              DTS:DataPrecision="5"
              DTS:DataScale="2"
              DTS:TextQualified="True"
              DTS:ObjectName="PurchasePrice"
              DTS:DTSID="{9382C991-536E-4FFA-A306-158DC9CCE50A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="3"
              DTS:TextQualified="True"
              DTS:ObjectName="QuantityInStock"
              DTS:DTSID="{7E98D8A2-D0D1-4E47-A4B1-D8009FE9A00A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="Perishable"
              DTS:DTSID="{18DD36CB-F412-4189-809B-1B59010BD60F}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="InStock"
              DTS:DTSID="{AFEBD4E4-15D8-4CD6-915B-F6C49D161FAB}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="ClearanceItem"
              DTS:DTSID="{451DBF6E-5692-4570-A146-7E7D781EDB83}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:DataType="11"
              DTS:TextQualified="True"
              DTS:ObjectName="SeasonalItem"
              DTS:DTSID="{654BA3AB-F417-4059-8269-025A2FA99C3F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[SQLServer-GreenhouseDB-Conn]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{B23479ED-237E-4819-9D35-9EE4EAE72EFD}"
      DTS:ObjectName="SQLServer-GreenhouseDB-Conn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=PERSONAL-DESKTO;Initial Catalog=Greenhouse;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Auto Translate=False;Application Name=SSIS-TextFileExport-{B23479ED-237E-4819-9D35-9EE4EAE72EFD}PERSONAL-DESKTO.Greenhouse;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{33937F31-54B6-454A-A4B9-FC2CECDDF5A0}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Project::BaseFolderParam] + &quot;_ExportFiles\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="BaseFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ExportFiles\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9ABE880B-1E34-4824-AD19-9514DE60AD08}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::BaseFolder] +  &quot;EmployeesData_&quot; + (DT_STR,4,1252)Year(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Month(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Day(GetDate()) + &quot;--&quot; + (DT_STR,2,1252)DatePart(&quot;Hour&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Minute&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Second&quot;, GetDate()) + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnStr_Employees">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ExportFiles\EmployeesData_2025.10.21--15_2_32.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3784854A-8F71-4297-AFFB-2B5DA5CB3BD2}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::BaseFolder] +  &quot;InvoicesData_&quot; + (DT_STR,4,1252)Year(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Month(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Day(GetDate()) + &quot;--&quot; + (DT_STR,2,1252)DatePart(&quot;Hour&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Minute&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Second&quot;, GetDate()) + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnStr_Invoices">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ExportFiles\InvoicesData_2025.10.21--15_2_32.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A1901695-41B7-44EC-9AC6-CBBAD71DEC58}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::BaseFolder] +  &quot;OrdersData_&quot; + (DT_STR,4,1252)Year(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Month(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Day(GetDate()) + &quot;--&quot; + (DT_STR,2,1252)DatePart(&quot;Hour&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Minute&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Second&quot;, GetDate()) + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnStr_Orders">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ExportFiles\OrdersData_2025.10.21--15_2_32.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D288BF80-5B4F-4D99-939F-A0C5078759DC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::BaseFolder] +  &quot;ProductsData_&quot; + (DT_STR,4,1252)Year(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Month(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Day(GetDate()) + &quot;--&quot; + (DT_STR,2,1252)DatePart(&quot;Hour&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Minute&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Second&quot;, GetDate()) + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnStr_Products">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ExportFiles\ProductsData_2025.10.21--15_2_32.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{22E00899-B31B-4092-ACC6-F04419A9FAFB}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::BaseFolder] +  &quot;..\\_SummaryLogs\\ExportsSummaryLog_&quot; + (DT_STR,4,1252)Year(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Month(GetDate()) + &quot;.&quot; + (DT_STR,2,1252)Day(GetDate()) + &quot;--&quot; + (DT_STR,2,1252)DatePart(&quot;Hour&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Minute&quot;, GetDate()) + &quot;_&quot; + (DT_STR,2,1252)DatePart(&quot;Second&quot;, GetDate()) + &quot;.csv&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ConnStr_SummaryLog_Exports">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\&lt;YourName&gt;\Documents\GreenhouseIntegrationProject-AlexAllen\_ExportFiles\..\_SummaryLogs\ExportsSummaryLog_2025.10.21--15_2_32.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BD003D2E-166C-47D1-8B19-9D2E97250F98}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EmployeeRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CF56A3BC-ECA9-433E-882A-56E075490911}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="InvoiceRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9F46DDDA-3892-451B-8559-BF4E47975111}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogMessage">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{9455735E-D98E-471F-AA31-AE4804740A66}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="OrderRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{71151655-D6A9-4465-BF3E-A34E7A4BADE7}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ProductRowCount">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{AA6446ED-FC10-43B3-BF08-79490FCE22C5}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RuntimeEnd">
      <DTS:VariableValue
        DTS:DataType="7">10/20/2025 2:21:42 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6F03C593-0191-41B8-A497-16E5A3F04067}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RuntimeStart">
      <DTS:VariableValue
        DTS:DataType="7">10/20/2025 2:21:00 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Export Main Data"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequence Container"
      DTS:DTSID="{E6B90B9E-23F0-4310-98BD-8F345B3A20E3}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Export Main Data"
      DTS:TransactionOption="2">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Export Main Data\Export Employees to Flat File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{70F9EA45-8BE0-4480-A2B4-E84EA3FE8FC8}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Export Employees to Flat File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Export Main Data\Export Employees to Flat File\Employee Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Employee Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::EmployeeRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Export Main Data\Export Employees to Flat File\Employee Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Main Data\Export Employees to Flat File\Employee Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Export Main Data\Export Employees to Flat File\Employee Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Destination"
                  localeId="1033"
                  name="EmployeesData File"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[EmployeesExport]"
                      connectionManagerRefId="Package.ConnectionManagers[EmployeesExport]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[EmployeeID]"
                          cachedDataType="i4"
                          cachedName="EmployeeID"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[EmployeeID]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[EmployeeID]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[FirstName]"
                          cachedDataType="wstr"
                          cachedLength="25"
                          cachedName="FirstName"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[FirstName]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[FirstName]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[LastName]"
                          cachedDataType="wstr"
                          cachedLength="25"
                          cachedName="LastName"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[LastName]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[LastName]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[Phone]"
                          cachedDataType="numeric"
                          cachedName="Phone"
                          cachedPrecision="15"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Phone]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Phone]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[Email]"
                          cachedDataType="wstr"
                          cachedLength="100"
                          cachedName="Email"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Email]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Email]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[DateOfBirth]"
                          cachedDataType="dbDate"
                          cachedName="DateOfBirth"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[DateOfBirth]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[DateOfBirth]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[EmploymentStatus]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="EmploymentStatus"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[EmploymentStatus]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[EmploymentStatus]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[OnDuty]"
                          cachedDataType="bool"
                          cachedName="OnDuty"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[OnDuty]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[OnDuty]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[Opener]"
                          cachedDataType="bool"
                          cachedName="Opener"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Opener]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Opener]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[Closer]"
                          cachedDataType="bool"
                          cachedName="Closer"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Closer]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Closer]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[Wage]"
                          cachedDataType="numeric"
                          cachedName="Wage"
                          cachedPrecision="5"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Wage]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Wage]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].Columns[Position]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Position"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Position]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Position]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[EmployeeID]"
                          dataType="i4"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="25"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="25"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Phone]"
                          dataType="numeric"
                          name="Phone"
                          precision="15" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Email]"
                          dataType="wstr"
                          length="100"
                          name="Email" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[DateOfBirth]"
                          dataType="dbDate"
                          name="DateOfBirth" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[EmploymentStatus]"
                          dataType="wstr"
                          length="50"
                          name="EmploymentStatus" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[OnDuty]"
                          dataType="bool"
                          name="OnDuty" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Opener]"
                          dataType="bool"
                          name="Opener" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Closer]"
                          dataType="bool"
                          name="Closer" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Wage]"
                          dataType="numeric"
                          name="Wage"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input].ExternalColumns[Position]"
                          dataType="wstr"
                          length="50"
                          name="Position" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="SQL Server Employees Table"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Employees]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=17.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SQLServer-GreenhouseDB-Conn]"
                      connectionManagerRefId="Package.ConnectionManagers[SQLServer-GreenhouseDB-Conn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[EmployeeID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[EmployeeID]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[EmployeeID]"
                          name="EmployeeID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[FirstName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[FirstName]"
                          length="25"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[FirstName]"
                          name="FirstName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[LastName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                          length="25"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[LastName]"
                          name="LastName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Phone]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Phone]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Phone]"
                          name="Phone"
                          precision="15"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Email]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                          length="100"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Email]"
                          name="Email"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[DateOfBirth]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[DateOfBirth]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[DateOfBirth]"
                          name="DateOfBirth"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[EmploymentStatus]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[EmploymentStatus]"
                          length="50"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[EmploymentStatus]"
                          name="EmploymentStatus"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[OnDuty]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[OnDuty]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[OnDuty]"
                          name="OnDuty"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Opener]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Opener]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Opener]"
                          name="Opener"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Closer]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Closer]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Closer]"
                          name="Closer"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Wage]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Wage]"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Wage]"
                          name="Wage"
                          precision="5"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Position]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Position]"
                          length="50"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].Columns[Position]"
                          name="Position"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[EmployeeID]"
                          dataType="i4"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[FirstName]"
                          dataType="wstr"
                          length="25"
                          name="FirstName" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[LastName]"
                          dataType="wstr"
                          length="25"
                          name="LastName" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Phone]"
                          dataType="numeric"
                          name="Phone"
                          precision="15" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Email]"
                          dataType="wstr"
                          length="100"
                          name="Email" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[DateOfBirth]"
                          dataType="dbDate"
                          name="DateOfBirth" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[EmploymentStatus]"
                          dataType="wstr"
                          length="50"
                          name="EmploymentStatus" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[OnDuty]"
                          dataType="bool"
                          name="OnDuty" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Opener]"
                          dataType="bool"
                          name="Opener" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Closer]"
                          dataType="bool"
                          name="Closer" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Wage]"
                          dataType="numeric"
                          name="Wage"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output].ExternalColumns[Position]"
                          dataType="wstr"
                          length="50"
                          name="Position" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[EmployeeID]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[EmployeeID]"
                          name="EmployeeID" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[FirstName]"
                          dataType="wstr"
                          length="25"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[FirstName]"
                          name="FirstName" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[LastName]"
                          dataType="wstr"
                          length="25"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[LastName]"
                          name="LastName" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Phone]"
                          dataType="numeric"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Phone]"
                          name="Phone"
                          precision="15" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Email]"
                          dataType="wstr"
                          length="100"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Email]"
                          name="Email" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[DateOfBirth]"
                          dataType="dbDate"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[DateOfBirth]"
                          name="DateOfBirth" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[EmploymentStatus]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[EmploymentStatus]"
                          name="EmploymentStatus" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[OnDuty]"
                          dataType="bool"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[OnDuty]"
                          name="OnDuty" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Opener]"
                          dataType="bool"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Opener]"
                          name="Opener" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Closer]"
                          dataType="bool"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Closer]"
                          name="Closer" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Wage]"
                          dataType="numeric"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Wage]"
                          name="Wage"
                          precision="5"
                          scale="2" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Position]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[Position]"
                          name="Position" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Export Main Data\Export Employees to Flat File.Paths[OLE DB Source Output]"
                  endId="Package\Export Main Data\Export Employees to Flat File\Employee Row Count.Inputs[Row Count Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Export Main Data\Export Employees to Flat File.Paths[Row Count Output 1]"
                  endId="Package\Export Main Data\Export Employees to Flat File\EmployeesData File.Inputs[Flat File Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Export Main Data\Export Employees to Flat File\Employee Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Export Main Data\Export Invoices to Flat File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{85227881-8864-4686-9FED-0B84AD24AD96}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Export Invoices to Flat File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Export Main Data\Export Invoices to Flat File\Invoice Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Invoice Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::InvoiceRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Export Main Data\Export Invoices to Flat File\Invoice Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Main Data\Export Invoices to Flat File\Invoice Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Export Main Data\Export Invoices to Flat File\Invoice Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Destination"
                  localeId="1033"
                  name="InvoicesData File"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[InvoicesExport]"
                      connectionManagerRefId="Package.ConnectionManagers[InvoicesExport]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].Columns[InvoiceID]"
                          cachedDataType="i4"
                          cachedName="InvoiceID"
                          externalMetadataColumnId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].ExternalColumns[InvoiceID]"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceID]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].Columns[InvoiceTotal]"
                          cachedDataType="numeric"
                          cachedName="InvoiceTotal"
                          cachedPrecision="8"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].ExternalColumns[InvoiceTotal]"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceTotal]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].Columns[InvoiceDate]"
                          cachedDataType="dbDate"
                          cachedName="InvoiceDate"
                          externalMetadataColumnId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].ExternalColumns[InvoiceDate]"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceDate]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].Columns[InvoiceDueDate]"
                          cachedDataType="dbDate"
                          cachedName="InvoiceDueDate"
                          externalMetadataColumnId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].ExternalColumns[InvoiceDueDate]"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceDueDate]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].Columns[Paid]"
                          cachedDataType="bool"
                          cachedName="Paid"
                          externalMetadataColumnId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].ExternalColumns[Paid]"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[Paid]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].ExternalColumns[InvoiceID]"
                          dataType="i4"
                          name="InvoiceID" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].ExternalColumns[InvoiceTotal]"
                          dataType="numeric"
                          name="InvoiceTotal"
                          precision="8"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].ExternalColumns[InvoiceDate]"
                          dataType="dbDate"
                          name="InvoiceDate" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].ExternalColumns[InvoiceDueDate]"
                          dataType="dbDate"
                          name="InvoiceDueDate" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input].ExternalColumns[Paid]"
                          dataType="bool"
                          name="Paid" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="SQL Server Invoices Table"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Invoices]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=17.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SQLServer-GreenhouseDB-Conn]"
                      connectionManagerRefId="Package.ConnectionManagers[SQLServer-GreenhouseDB-Conn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].ExternalColumns[InvoiceID]"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceID]"
                          name="InvoiceID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceTotal]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].ExternalColumns[InvoiceTotal]"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceTotal]"
                          name="InvoiceTotal"
                          precision="8"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].ExternalColumns[InvoiceDate]"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceDate]"
                          name="InvoiceDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceDueDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].ExternalColumns[InvoiceDueDate]"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[InvoiceDueDate]"
                          name="InvoiceDueDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[Paid]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].ExternalColumns[Paid]"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].Columns[Paid]"
                          name="Paid"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].ExternalColumns[InvoiceID]"
                          dataType="i4"
                          name="InvoiceID" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].ExternalColumns[InvoiceTotal]"
                          dataType="numeric"
                          name="InvoiceTotal"
                          precision="8"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].ExternalColumns[InvoiceDate]"
                          dataType="dbDate"
                          name="InvoiceDate" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].ExternalColumns[InvoiceDueDate]"
                          dataType="dbDate"
                          name="InvoiceDueDate" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output].ExternalColumns[Paid]"
                          dataType="bool"
                          name="Paid" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[InvoiceID]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[InvoiceID]"
                          name="InvoiceID" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[InvoiceTotal]"
                          dataType="numeric"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[InvoiceTotal]"
                          name="InvoiceTotal"
                          precision="8"
                          scale="2" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[InvoiceDate]"
                          dataType="dbDate"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[InvoiceDate]"
                          name="InvoiceDate" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[InvoiceDueDate]"
                          dataType="dbDate"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[InvoiceDueDate]"
                          name="InvoiceDueDate" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[Paid]"
                          dataType="bool"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[Paid]"
                          name="Paid" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Export Main Data\Export Invoices to Flat File.Paths[OLE DB Source Output]"
                  endId="Package\Export Main Data\Export Invoices to Flat File\Invoice Row Count.Inputs[Row Count Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Export Main Data\Export Invoices to Flat File.Paths[Row Count Output 1]"
                  endId="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File.Inputs[Flat File Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Export Main Data\Export Invoices to Flat File\Invoice Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Export Main Data\Export Orders to Flat File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{DEC2479D-06CC-4592-9375-1775ACC0CCEB}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Export Orders to Flat File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Export Main Data\Export Orders to Flat File\Order Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Order Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::OrderRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Export Main Data\Export Orders to Flat File\Order Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Main Data\Export Orders to Flat File\Order Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Export Main Data\Export Orders to Flat File\Order Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Main Data\Export Orders to Flat File\OrdersData File"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Destination"
                  localeId="1033"
                  name="OrdersData File"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[OrdersExport]"
                      connectionManagerRefId="Package.ConnectionManagers[OrdersExport]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].Columns[OrderID]"
                          cachedDataType="i4"
                          cachedName="OrderID"
                          externalMetadataColumnId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].ExternalColumns[OrderID]"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[OrderID]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].Columns[OrderTotal]"
                          cachedDataType="numeric"
                          cachedName="OrderTotal"
                          cachedPrecision="8"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].ExternalColumns[OrderTotal]"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[OrderTotal]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].Columns[OrderDate]"
                          cachedDataType="dbDate"
                          cachedName="OrderDate"
                          externalMetadataColumnId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].ExternalColumns[OrderDate]"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[OrderDate]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].Columns[Received]"
                          cachedDataType="bool"
                          cachedName="Received"
                          externalMetadataColumnId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].ExternalColumns[Received]"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[Received]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].ExternalColumns[OrderID]"
                          dataType="i4"
                          name="OrderID" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].ExternalColumns[OrderTotal]"
                          dataType="numeric"
                          name="OrderTotal"
                          precision="8"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].ExternalColumns[OrderDate]"
                          dataType="dbDate"
                          name="OrderDate" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input].ExternalColumns[Received]"
                          dataType="bool"
                          name="Received" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="SQL Server Orders Table"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Orders]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=17.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SQLServer-GreenhouseDB-Conn]"
                      connectionManagerRefId="Package.ConnectionManagers[SQLServer-GreenhouseDB-Conn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[OrderID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].ExternalColumns[OrderID]"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[OrderID]"
                          name="OrderID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[OrderTotal]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].ExternalColumns[OrderTotal]"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[OrderTotal]"
                          name="OrderTotal"
                          precision="8"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[OrderDate]"
                          dataType="dbDate"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].ExternalColumns[OrderDate]"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[OrderDate]"
                          name="OrderDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[Received]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].ExternalColumns[Received]"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].Columns[Received]"
                          name="Received"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].ExternalColumns[OrderID]"
                          dataType="i4"
                          name="OrderID" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].ExternalColumns[OrderTotal]"
                          dataType="numeric"
                          name="OrderTotal"
                          precision="8"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].ExternalColumns[OrderDate]"
                          dataType="dbDate"
                          name="OrderDate" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output].ExternalColumns[Received]"
                          dataType="bool"
                          name="Received" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[OrderID]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[OrderID]"
                          name="OrderID" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[OrderTotal]"
                          dataType="numeric"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[OrderTotal]"
                          name="OrderTotal"
                          precision="8"
                          scale="2" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[OrderDate]"
                          dataType="dbDate"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[OrderDate]"
                          name="OrderDate" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[Received]"
                          dataType="bool"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[Received]"
                          name="Received" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Export Main Data\Export Orders to Flat File.Paths[OLE DB Source Output]"
                  endId="Package\Export Main Data\Export Orders to Flat File\Order Row Count.Inputs[Row Count Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Export Main Data\Export Orders to Flat File.Paths[Row Count Output 1]"
                  endId="Package\Export Main Data\Export Orders to Flat File\OrdersData File.Inputs[Flat File Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Export Main Data\Export Orders to Flat File\Order Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Export Main Data\Export Products to Flat File"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{340D7322-D65F-4CFC-84C0-7EAFD02C8E7E}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Export Products to Flat File"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Export Main Data\Export Products to Flat File\Product Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Product Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::ProductRowCount</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Export Main Data\Export Products to Flat File\Product Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Export Main Data\Export Products to Flat File\Product Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Export Main Data\Export Products to Flat File\Product Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Export Main Data\Export Products to Flat File\ProductsData File"
                  componentClassID="Microsoft.FlatFileDestination"
                  contactInfo="Flat File Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Destination"
                  localeId="1033"
                  name="ProductsData File"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether the data will overwrite or append to the destination file."
                      name="Overwrite">true</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the text to write to the destination file before any data is written."
                      expressionType="Notify"
                      name="Header" />
                    <property
                      dataType="System.Boolean"
                      description="When text qualifier is enabled, specifies whether the text qualifier in the data written to the destination file will be escaped or not."
                      name="EscapeQualifier">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[ProductsExport]"
                      connectionManagerRefId="Package.ConnectionManagers[ProductsExport]"
                      name="FlatFileConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input]"
                      hasSideEffects="true"
                      name="Flat File Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].Columns[ProductID]"
                          cachedDataType="i4"
                          cachedName="ProductID"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[ProductID]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[ProductID]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].Columns[ProductName]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ProductName"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[ProductName]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[ProductName]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].Columns[Category]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="Category"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[Category]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[Category]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].Columns[OrderCost]"
                          cachedDataType="numeric"
                          cachedName="OrderCost"
                          cachedPrecision="5"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[OrderCost]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[OrderCost]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].Columns[PurchasePrice]"
                          cachedDataType="numeric"
                          cachedName="PurchasePrice"
                          cachedPrecision="5"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[PurchasePrice]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[PurchasePrice]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].Columns[QuantityInStock]"
                          cachedDataType="i4"
                          cachedName="QuantityInStock"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[QuantityInStock]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[QuantityInStock]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].Columns[Perishable]"
                          cachedDataType="bool"
                          cachedName="Perishable"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[Perishable]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[Perishable]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].Columns[InStock]"
                          cachedDataType="bool"
                          cachedName="InStock"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[InStock]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[InStock]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].Columns[ClearanceItem]"
                          cachedDataType="bool"
                          cachedName="ClearanceItem"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[ClearanceItem]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[ClearanceItem]" />
                        <inputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].Columns[SeasonalItem]"
                          cachedDataType="bool"
                          cachedName="SeasonalItem"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[SeasonalItem]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[SeasonalItem]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[ProductID]"
                          dataType="i4"
                          name="ProductID" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[ProductName]"
                          dataType="wstr"
                          length="50"
                          name="ProductName" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[Category]"
                          dataType="wstr"
                          length="50"
                          name="Category" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[OrderCost]"
                          dataType="numeric"
                          name="OrderCost"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[PurchasePrice]"
                          dataType="numeric"
                          name="PurchasePrice"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[QuantityInStock]"
                          dataType="i4"
                          name="QuantityInStock" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[Perishable]"
                          dataType="bool"
                          name="Perishable" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[InStock]"
                          dataType="bool"
                          name="InStock" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[ClearanceItem]"
                          dataType="bool"
                          name="ClearanceItem" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input].ExternalColumns[SeasonalItem]"
                          dataType="bool"
                          name="SeasonalItem" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                </component>
                <component
                  refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="SQL Server Products Table"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[ProductItems]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor, Microsoft.DataTransformationServices.Controls, Version=17.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[SQLServer-GreenhouseDB-Conn]"
                      connectionManagerRefId="Package.ConnectionManagers[SQLServer-GreenhouseDB-Conn]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[ProductID]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[ProductID]"
                          name="ProductID"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[ProductName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[ProductName]"
                          length="50"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[ProductName]"
                          name="ProductName"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[Category]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[Category]"
                          length="50"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[Category]"
                          name="Category"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[OrderCost]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[OrderCost]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[OrderCost]"
                          name="OrderCost"
                          precision="5"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[PurchasePrice]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[PurchasePrice]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[PurchasePrice]"
                          name="PurchasePrice"
                          precision="5"
                          scale="2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[QuantityInStock]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[QuantityInStock]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[QuantityInStock]"
                          name="QuantityInStock"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[Perishable]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[Perishable]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[Perishable]"
                          name="Perishable"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[InStock]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[InStock]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[InStock]"
                          name="InStock"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[ClearanceItem]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[ClearanceItem]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[ClearanceItem]"
                          name="ClearanceItem"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[SeasonalItem]"
                          dataType="bool"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[SeasonalItem]"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].Columns[SeasonalItem]"
                          name="SeasonalItem"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[ProductID]"
                          dataType="i4"
                          name="ProductID" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[ProductName]"
                          dataType="wstr"
                          length="50"
                          name="ProductName" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[Category]"
                          dataType="wstr"
                          length="50"
                          name="Category" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[OrderCost]"
                          dataType="numeric"
                          name="OrderCost"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[PurchasePrice]"
                          dataType="numeric"
                          name="PurchasePrice"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[QuantityInStock]"
                          dataType="i4"
                          name="QuantityInStock" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[Perishable]"
                          dataType="bool"
                          name="Perishable" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[InStock]"
                          dataType="bool"
                          name="InStock" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[ClearanceItem]"
                          dataType="bool"
                          name="ClearanceItem" />
                        <externalMetadataColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output].ExternalColumns[SeasonalItem]"
                          dataType="bool"
                          name="SeasonalItem" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[ProductID]"
                          name="ProductID" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[ProductName]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[ProductName]"
                          name="ProductName" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[Category]"
                          dataType="wstr"
                          length="50"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[Category]"
                          name="Category" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[OrderCost]"
                          dataType="numeric"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[OrderCost]"
                          name="OrderCost"
                          precision="5"
                          scale="2" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[PurchasePrice]"
                          dataType="numeric"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[PurchasePrice]"
                          name="PurchasePrice"
                          precision="5"
                          scale="2" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[QuantityInStock]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[QuantityInStock]"
                          name="QuantityInStock" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[Perishable]"
                          dataType="bool"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[Perishable]"
                          name="Perishable" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[InStock]"
                          dataType="bool"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[InStock]"
                          name="InStock" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[ClearanceItem]"
                          dataType="bool"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[ClearanceItem]"
                          name="ClearanceItem" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[SeasonalItem]"
                          dataType="bool"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[SeasonalItem]"
                          name="SeasonalItem" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Export Main Data\Export Products to Flat File.Paths[OLE DB Source Output]"
                  endId="Package\Export Main Data\Export Products to Flat File\Product Row Count.Inputs[Row Count Input 1]"
                  name="OLE DB Source Output"
                  startId="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Export Main Data\Export Products to Flat File.Paths[Row Count Output 1]"
                  endId="Package\Export Main Data\Export Products to Flat File\ProductsData File.Inputs[Flat File Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Export Main Data\Export Products to Flat File\Product Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Print Summary Log"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{3CFF5514-E3B3-4BC1-ACCB-216491115D1B}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Print Summary Log"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_6527c6bdda1546b991e0e5167894719e"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="System::TaskID,System::TaskName,User::ConnStr_Employees,User::ConnStr_Invoices,User::ConnStr_Orders,User::ConnStr_Products,User::ConnStr_SummaryLog_Exports,User::EmployeeRowCount,User::InvoiceRowCount,System::MachineName,User::OrderRowCount,System::PackageName,User::ProductRowCount,User::RuntimeEnd,User::RuntimeStart,System::UserName"
          ReadWriteVariables="User::LogMessage">
          <ProjectItem
            Name="ST_6527c6bdda1546b991e0e5167894719e.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{DAB2DDC3-65A2-46F9-9E99-219BE1217DF4}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_6527c6bdda1546b991e0e5167894719e</RootNamespace>
    <AssemblyName>ST_6527c6bdda1546b991e0e5167894719e</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion
using System;
using System.IO;
using Microsoft.SqlServer.Dts.Runtime;

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_6527c6bdda1546b991e0e5167894719e
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            //Try to create a log file and append some data
            try
            {
                //Variables for execution details
                string logFilePath = Dts.Variables["User::ConnStr_SummaryLog_Exports"].Value.ToString();
                string packageName = Dts.Variables["System::PackageName"].Value.ToString();
                DateTime startTime = (DateTime)Dts.Variables["User::RuntimeStart"].Value;
                DateTime endTime = (DateTime)Dts.Variables["User::RuntimeEnd"].Value;
                TimeSpan runTimeDiff = endTime - startTime;
                string machine = Dts.Variables["System::MachineName"].Value.ToString();
                string taskName = Dts.Variables["System::TaskName"].Value.ToString();
                string taskID = Dts.Variables["System::TaskID"].Value.ToString();
                string userName = Dts.Variables["System::UserName"].Value.ToString();

                //Variables for file details
                string employeeFilePath = Dts.Variables["User::ConnStr_Employees"].Value.ToString();
                string productFilePath = Dts.Variables["User::ConnStr_Products"].Value.ToString();
                string orderFilePath = Dts.Variables["User::ConnStr_Orders"].Value.ToString();
                string invoiceFilePath = Dts.Variables["User::ConnStr_Invoices"].Value.ToString();

                //Variables for the count of exports per table
                int employeeCount = (int)Dts.Variables["EmployeeRowCount"].Value;
                int invoiceCount = (int)Dts.Variables["InvoiceRowCount"].Value;
                int orderCount = (int)Dts.Variables["OrderRowCount"].Value;
                int productCount = (int)Dts.Variables["ProductRowCount"].Value;

                //Create a log message
                string logMessage = $"========================================\nGreenhouse Management - Export Log\n========================================\n" +
                         $"------------------------------\nExport Details\n------------------------------\n" +
                         $"Employees Exported: {employeeCount}\n" +
                         $"Products Exported: {productCount}\n" +
                         $"Orders Exported: {orderCount}\n" +
                         $"Invoices Exported: {invoiceCount}\n\n----------------------------------------\n" +
                         $"File Outputs\n----------------------------------------\n- {employeeFilePath}\n- {productFilePath}\n- {orderFilePath}\n- {invoiceFilePath}\n\n" +
                         $"----------------------------------------\n" +
                         $"Execution Details\n----------------------------------------\n" +
                         $"Opeartion Duration: {runTimeDiff.TotalSeconds.ToString()} Seconds\n" +
                         $"Operation Started: {startTime:HH:mm:ss}\n" +
                         $"Operation Ended: {endTime:HH:mm:ss}\n" +
                         $"Opeartion Executed By: {userName}\n" +
                         $"Package: {packageName} ran on {machine}\n" +
                         $"Task Name: {taskName}\n" +
                         $"Task ID: {taskID}\n";

                //Append the text to the file
                File.AppendAllText(logFilePath, logMessage);

                //Script task was successful
                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex) {
                //Perform an error
                Dts.Events.FireError(0, "Logging Script", ex.Message, "", 0);
                //Script task failed
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_6527c6bdda1546b991e0e5167894719e</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_6527c6bdda1546b991e0e5167894719e</msb:DisplayName>
    <msb:ProjectId>{C91A4581-7A45-4E46-B7DE-018F5BA97F4B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_6527c6bdda1546b991e0e5167894719e.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6527c6bdda1546b991e0e5167894719e.Properties.Settings.get_Default():ST_6527c6bdda1546b991e0e5167894719e.Properties.Sett" +
    "ings")]

namespace ST_6527c6bdda1546b991e0e5167894719e.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_6527c6bdda1546b991e0e5167894719e")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_6527c6bdda1546b991e0e5167894719e")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6527c6bdda1546b991e0e5167894719e.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6527c6bdda1546b991e0e5167894719e.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_6527c6bdda1546b991e0e5167894719e.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_6527c6bdda1546b991e0e5167894719e.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_6527c6bdda1546b991e0e5167894719e.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_6527c6bdda1546b991e0e5167894719e.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACYI92gAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAACjoA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALg5AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAEBoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADs
OQAAAAAAAEgAAAACAAUAgCQAAIAUAAABAAAAAAAAAAA5AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgCfAwAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyQwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnJrAABw
bxIAAApvEwAACqUPAAABDAIoEAAACm8RAAAKcpEAAHBvEgAACm8TAAAKpQ8AAAENCQgoFQAAChME
AigQAAAKbxEAAApyswAAcG8SAAAKbxMAAApvFAAAChMFAigQAAAKbxEAAApy2wAAcG8SAAAKbxMA
AApvFAAAChMGAigQAAAKbxEAAApy/QAAcG8SAAAKbxMAAApvFAAAChMHAigQAAAKbxEAAApyGwEA
cG8SAAAKbxMAAApvFAAAChMIAigQAAAKbxEAAApyPQEAcG8SAAAKbxMAAApvFAAAChMJAigQAAAK
bxEAAApybQEAcG8SAAAKbxMAAApvFAAAChMKAigQAAAKbxEAAApymwEAcG8SAAAKbxMAAApvFAAA
ChMLAigQAAAKbxEAAApyxQEAcG8SAAAKbxMAAApvFAAAChMMAigQAAAKbxEAAApy8wEAcG8SAAAK
bxMAAAqlHgAAARMNAigQAAAKbxEAAApyFQIAcG8SAAAKbxMAAAqlHgAAARMOAigQAAAKbxEAAApy
NQIAcG8SAAAKbxMAAAqlHgAAARMPAigQAAAKbxEAAApyUQIAcG8SAAAKbxMAAAqlHgAAARMQHx2N
HwAAASUWcnECAHCiJRdy+AMAcBENjB4AAAEoFgAACqIlGHIqBABwERCMHgAAASgWAAAKoiUZcloE
AHARD4weAAABKBYAAAqiJRpyhgQAcBEOjB4AAAEoFgAACqIlG3ILBQBwoiUcEQmiJR1yfQUAcKIl
HhEKoiUfCXJ9BQBwoiUfChELoiUfC3J9BQBwoiUfDBEMoiUfDXKFBQBwoiUfDhIEKBcAAAoTEhIS
KBgAAAqiJR8PcnwGAHCiJR8QcpAGAHAIjA8AAAEoFgAACqIlHxFy0gYAcAmMDwAAASgWAAAKoiUf
EnIQBwBwoiUfExEIoiUfFHJABwBwoiUfFQeiJR8WclYHAHCiJR8XEQWiJR8YcmgHAHCiJR8ZEQai
JR8acoIHAHCiJR8bEQeiJR8ccpgHAHCiKBkAAAoTEQYRESgaAAAKAigQAAAKFm8bAAAK3jQTEwIo
EAAACm8cAAAKFnKcBwBwERNvHQAACnK6BwBwFm8eAAAKJgIoEAAAChdvGwAACt4AKgBBHAAAAAAA
AAAAAABqAwAAagMAADQAAAARAAABHgIoHwAACioeAiggAAAKKq5+AQAABC0ecrwHAHDQAwAAAigh
AAAKbyIAAApzIwAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKCQAAAoqLnMI
AAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAkBAAAI34AAJAE
AAAEBgAAI1N0cmluZ3MAAAAAlAoAADAIAAAjVVMAxBIAABAAAAAjR1VJRAAAANQSAACsAQAAI0Js
b2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAAJQAAAAUAAAAGAAAACQAAAAEAAAAkAAAA
AgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAApgMBAAAAAAAGAFYCxwQG
AOUCxwQGAKIBowQPADsFAAAGAM8BPAQGADkCPAQGABoCPAQGAMwCPAQGAHYCPAQGAI8CPAQGAOYB
PAQGAAECEwMKAKoCVQMKACEBVQMGAMMA1wMGAO8D1wMGAE4E1wMGAN4D1wMGAIUBowQGAMcF1wMG
AGgE5wQGAFgEGAQOAFUBkAMOALYBkAMOAD0BAwQGAGoBxwQKAH4DVQMSAH0FzAASAIoAzAAGAAEA
1wMGAC8D1wMGAJMA1wMGAL4AEAAKAHgEVQMGAOwA1wMGAJoA1wMGAPsFPAQAAAAABwAAAAAAAQAB
AAEAEAD4A0oAOQABAAEAAAAQAO4ESgVRAAEAAwAAARAAhwVKBWUAAwAHAAMBAACgBQAASQAEAAoA
EQDjA68AEQARAbMAEQBuALcABgY5ALsAVoCQBb4AVoDxAL4AUCAAAAAAhgD+AwYAAQAYJAAAAACG
GJYEBgABACAkAAAAAIMYlgQGAAEAKCQAAAAAkwhkBMIAAQBUJAAAAACTCPkAxwABAFskAAAAAJMI
BQHMAAEAYyQAAAAAlgjOBdIAAgBqJAAAAACGGJYEBgACAHIkAAAAAJEYnATXAAIAAAABAA0DCQCW
BAEAEQCWBAYAGQCWBAoAKQCWBBAAMQCWBBAAOQCWBBAAQQCWBBAASQCWBBAAUQCWBBAAWQCWBBAA
YQCWBBAAaQCWBAYAmQCWBAYAwQCWBBUA0QCWBAYAcQCYBTYA2QB5BTsA4QDOA0AA6QADA0YAoQAt
A0oAeQAtBE4A+QDABVcAgQC2BF0AAQEtA0oA+QC5BWEACQHpBWcA2QDaBQEA2QCuBW0AiQB+AEoA
EQGMBHMAcQCWBAYAoQCWBAYAGQGsAHwAGQH3BYUAqQCWBIsAyQCWBAYACAAUAKUACAAYAKoAKQBz
ABIBLgALAOoALgATAPMALgAbABIBLgAjABsBLgArAEQBLgAzAEQBLgA7AEQBLgBDABsBLgBLAEoB
LgBTAEQBLgBbAGEBQwBjAKoASQBzABIBYQB7AKoAYwBrAKoAGwADAAEABAADAAAAaATbAAAAGQHg
AAAA0gXlAAIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAA0CQrowAAAAAAAEoAAAAEAAAA
AAAAAAAAAACTAEEAAAAAABAAAAAAAAAAAAAAAJwANgMAAAAABAAAAAAAAAAAAAAAkwDXAwAAAAAQ
AAAAAAAAAAAAAACcABoAAAAAAAAAAAABAAAA+AQAAAUAAgAAAAAAAEludDMyADxNb2R1bGU+AFN5
c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBtc2NvcmxpYgBT
VF82NTI3YzZiZGRhMTU0NmI5OTFlMGU1MTY3ODk0NzE5ZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X01l
c3NhZ2UAVmFyaWFibGUARG91YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxl
AEZpbGUARGF0ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBUeXBlAEZhaWx1
cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlwdE9i
amVjdE1vZGVsQmFzZQBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBFZGl0b3JCcm93c2FibGVTdGF0
ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRl
AERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0
cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9u
QXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0
QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAZ2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9T
dHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
RHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAFNUXzY1MjdjNmJkZGExNTQ2Yjk5MWUwZTUxNjc4OTQ3MTllLmRsbABnZXRfSXRlbQBTeXN0
ZW0ARW51bQByZXNvdXJjZU1hbgBUaW1lU3BhbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0
aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAG9wX1N1YnRyYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9u
AEV4Y2VwdGlvbgBDdWx0dXJlSW5mbwBnZXRfUmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdy
YXBwZXIARmlyZUVycm9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAZ2V0X1RvdGFs
U2Vjb25kcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMA
U1RfNjUyN2M2YmRkYTE1NDZiOTkxZTBlNTE2Nzg5NDcxOWUuUHJvcGVydGllcy5SZXNvdXJjZXMu
cmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzY1MjdjNmJkZGExNTQ2Yjk5MWUwZTUxNjc4OTQ3
MTllLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdldF9EdHMAU2Ny
aXB0UmVzdWx0cwBnZXRfRXZlbnRzAENvbmNhdABGb3JtYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNl
dF9UYXNrUmVzdWx0AEFwcGVuZEFsbFRleHQAZ2V0X0Fzc2VtYmx5AABBVQBzAGUAcgA6ADoAQwBv
AG4AbgBTAHQAcgBfAFMAdQBtAG0AYQByAHkATABvAGcAXwBFAHgAcABvAHIAdABzAAAnUwB5AHMA
dABlAG0AOgA6AFAAYQBjAGsAYQBnAGUATgBhAG0AZQAAJVUAcwBlAHIAOgA6AFIAdQBuAHQAaQBt
AGUAUwB0AGEAcgB0AAAhVQBzAGUAcgA6ADoAUgB1AG4AdABpAG0AZQBFAG4AZAAAJ1MAeQBzAHQA
ZQBtADoAOgBNAGEAYwBoAGkAbgBlAE4AYQBtAGUAACFTAHkAcwB0AGUAbQA6ADoAVABhAHMAawBO
AGEAbQBlAAAdUwB5AHMAdABlAG0AOgA6AFQAYQBzAGsASQBEAAAhUwB5AHMAdABlAG0AOgA6AFUA
cwBlAHIATgBhAG0AZQAAL1UAcwBlAHIAOgA6AEMAbwBuAG4AUwB0AHIAXwBFAG0AcABsAG8AeQBl
AGUAcwAALVUAcwBlAHIAOgA6AEMAbwBuAG4AUwB0AHIAXwBQAHIAbwBkAHUAYwB0AHMAAClVAHMA
ZQByADoAOgBDAG8AbgBuAFMAdAByAF8ATwByAGQAZQByAHMAAC1VAHMAZQByADoAOgBDAG8AbgBu
AFMAdAByAF8ASQBuAHYAbwBpAGMAZQBzAAAhRQBtAHAAbABvAHkAZQBlAFIAbwB3AEMAbwB1AG4A
dAAAH0kAbgB2AG8AaQBjAGUAUgBvAHcAQwBvAHUAbgB0AAAbTwByAGQAZQByAFIAbwB3AEMAbwB1
AG4AdAAAH1AAcgBvAGQAdQBjAHQAUgBvAHcAQwBvAHUAbgB0AACBhT0APQA9AD0APQA9AD0APQA9
AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0A
PQA9AD0ACgBHAHIAZQBlAG4AaABvAHUAcwBlACAATQBhAG4AYQBnAGUAbQBlAG4AdAAgAC0AIABF
AHgAcABvAHIAdAAgAEwAbwBnAAoAPQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0A
PQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQA9AD0APQAKAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAAoARQB4AHAA
bwByAHQAIABEAGUAdABhAGkAbABzAAoALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ACgABMUUAbQBwAGwAbwB5AGUAZQBzACAARQB4AHAA
bwByAHQAZQBkADoAIAB7ADAAfQAKAAAvUAByAG8AZAB1AGMAdABzACAARQB4AHAAbwByAHQAZQBk
ADoAIAB7ADAAfQAKAAArTwByAGQAZQByAHMAIABFAHgAcABvAHIAdABlAGQAOgAgAHsAMAB9AAoA
AICDSQBuAHYAbwBpAGMAZQBzACAARQB4AHAAbwByAHQAZQBkADoAIAB7ADAAfQAKAAoALQAtAC0A
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAKAAFxRgBpAGwAZQAgAE8AdQB0AHAAdQB0AHMACgAtAC0ALQAtAC0A
LQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAAoALQAgAAEHCgAtACAAAYD1CgAKAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
CgBFAHgAZQBjAHUAdABpAG8AbgAgAEQAZQB0AGEAaQBsAHMACgAtAC0ALQAtAC0ALQAtAC0ALQAt
AC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0ALQAtAC0A
LQAtAAoATwBwAGUAYQByAHQAaQBvAG4AIABEAHUAcgBhAHQAaQBvAG4AOgAgAAETIABTAGUAYwBv
AG4AZABzAAoAAEFPAHAAZQByAGEAdABpAG8AbgAgAFMAdABhAHIAdABlAGQAOgAgAHsAMAA6AEgA
SAA6AG0AbQA6AHMAcwB9AAoAAD1PAHAAZQByAGEAdABpAG8AbgAgAEUAbgBkAGUAZAA6ACAAewAw
ADoASABIADoAbQBtADoAcwBzAH0ACgAAL08AcABlAGEAcgB0AGkAbwBuACAARQB4AGUAYwB1AHQA
ZQBkACAAQgB5ADoAIAAAFQoAUABhAGMAawBhAGcAZQA6ACAAABEgAHIAYQBuACAAbwBuACAAABkK
AFQAYQBzAGsAIABOAGEAbQBlADoAIAAAFQoAVABhAHMAawAgAEkARAA6ACAAAAMKAAAdTABvAGcA
ZwBpAG4AZwAgAFMAYwByAGkAcAB0AAABAHFTAFQAXwA2ADUAMgA3AGMANgBiAGQAZABhADEANQA0
ADYAYgA5ADkAMQBlADAAZQA1ADEANgA3ADgAOQA0ADcAMQA5AGUALgBQAHIAbwBwAGUAcgB0AGkA
ZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAEuQorUpI80KUJDQw5pUSPgAEIAEBCAMgAAEFIAEB
EREEIAEBDgUgAQERXRoHFA4OET0RPRFBDg4ODg4ODg4ICAgIDg0SRQQgABJtBCAAEnEFIAESdRwD
IAAcAyAADggAAhFBET0RPQUAAg4OHAMgAA0FAAEOHQ4FAAIBDg4FIAASgIkIIAUCCA4ODggIAAES
gI0RgJEFIAASgJUHIAIBDhKAlQi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJVAwYSWQMG
EhACBggDBhEUBAAAElUEAAASWQUAAQESWQQAABIQAwAAAQQIABJVBAgAElkECAASEAgBAAgAAAAA
AB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfNjUyN2M2YmRk
YTE1NDZiOTkxZTBlNTE2Nzg5NDcxOWUAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyNQAASQEA
Gi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVU
IEZyYW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNl
UmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1Ymxp
Y0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3Vy
Y2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAOA5AAAAAAAAAAAAAPo5AAAAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAADsOQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAg
ABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAro9AkAAABACuj0CQ/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADYANQAyADcAYwA2AGIAZABkAGEAMQA1ADQANgBiADkAOQAxAGUAMABlADUAMQA2ADcAOAA5
ADQANwAxADkAZQAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA5ADQA
MgA0AC4ANAAxADcANwAxAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADYANQAyADcAYwA2AGIAZABkAGEAMQA1ADQANgBiADkAOQAxAGUAMABlADUAMQA2ADcAOAA5ADQA
NwAxADkAZQAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8ANgA1ADIANwBjADYAYgBkAGQAYQAxADUANAA2AGIAOQA5ADEAZQAwAGUANQAxADYA
NwA4ADkANAA3ADEAOQBlAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfADYANQAyADcAYwA2AGIAZABkAGEAMQA1ADQANgBiADkAOQAxAGUAMABlADUAMQA2ADcA
OAA5ADQANwAxADkAZQAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOQA0ADIANAAuADQAMQA3ADcAMQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AOQA0ADIANAAuADQAMQA3ADcAMQAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAAMOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set RuntimeEnd Variable"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{D764F151-4B60-48AE-A6BA-6EA5BFB7566E}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set RuntimeEnd Variable"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_590b6c307af64f7b9c7c4edfbe7bef77"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::RuntimeEnd">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_590b6c307af64f7b9c7c4edfbe7bef77")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_590b6c307af64f7b9c7c4edfbe7bef77")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_590b6c307af64f7b9c7c4edfbe7bef77.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{75af2be9-a050-4e89-8f6e-a8444d896857}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_590b6c307af64f7b9c7c4edfbe7bef77</RootNamespace>
    <AssemblyName>ST_590b6c307af64f7b9c7c4edfbe7bef77</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>

  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>

  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
         <Generator>ResXFileCodeGenerator</Generator>
         <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
             <AutoGen>True</AutoGen>
         <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
         <Generator>SettingsSingleFileGenerator</Generator>
         <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
         <AutoGen>True</AutoGen>
         <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
         <SubType>Code</SubType>
    </Compile>
  </ItemGroup>

  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />

  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask"
                           HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}"
                           ApplicationType="usd"
                           Language="cs"
                           TemplatesPath=""
                           DebugInfoCommandLine=""
                           DebugInfoWorkingDir=""
                           IconImageList=""/>
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex="">
        </Host>
        <ProjectClient>
            <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_590b6c307af64f7b9c7c4edfbe7bef77
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // Set runtime end variable
            Dts.Variables["User::RuntimeEnd"].Value = DateTime.Now;
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>ST_590b6c307af64f7b9c7c4edfbe7bef77</msb:CodeName>
    <msb:DisplayName>ST_590b6c307af64f7b9c7c4edfbe7bef77</msb:DisplayName>
    <msb:ProjectId>{4337A16E-EE5A-4E32-A8E8-6F679FAF0C3D}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_590b6c307af64f7b9c7c4edfbe7bef77.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_590b6c307af64f7b9c7c4edfbe7bef77.Properties.Settings.get_Default():ST_590b6c307af64f7b9c7c4edfbe7bef77.Properties.Sett" +
    "ings")]

namespace ST_590b6c307af64f7b9c7c4edfbe7bef77.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_590b6c307af64f7b9c7c4edfbe7bef77.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_590b6c307af64f7b9c7c4edfbe7bef77.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_590b6c307af64f7b9c7c4edfbe7bef77.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_590b6c307af64f7b9c7c4edfbe7bef77.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_590b6c307af64f7b9c7c4edfbe7bef77.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_590b6c307af64f7b9c7c4edfbe7bef77.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHWM9mgAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAii0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADgtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAkA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABs
LQAAAAAAAEgAAAACAAUA6CAAAJgLAAABAAAAAAAAAIAsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMYCKBAAAApvEQAACnIBAABwbxIAAAooEwAACowbAAABbxQA
AAoCKBAAAAoWbxUAAAoqHgIoFgAACioeAigXAAAKKq5+AQAABC0eciMAAHDQAwAAAigYAAAKbxkA
AApzGgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKBsAAAoqLnMIAAAGgAMA
AAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAvAMAACN+AAAoBAAAZAUAACNT
dHJpbmdzAAAAAIwJAACYAAAAI1VTACQKAAAQAAAAI0dVSUQAAAA0CgAAZAEAACNCbG9iAAAAAAAA
AAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAAB4AAAAFAAAABgAAAAkAAAABAAAAGwAAAAIAAAAQAAAA
AgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAdQMBAAAAAAAGAC4CRQQGAL0CRQQGAHoBMgQP
ALkEAAAGAKcB8wMGABEC8wMGAPIB8wMGAKQC8wMGAE4C8wMGAGcC8wMGAL4B8wMGANkB6wIKAIIC
JAMKAPkAJAMGAK0DpgMGAF0BMgQGACwFpgMGABUEZQQGAAUE3gMOAC0BXwMOAI4BXwMOABUByQMG
AEIBRQQKAE0DJAMSAPsEpAASAG4ApAAGAJsApgMGAMQApgMGAHcApgMGAFoF8wMAAAAAJQAAAAAA
AQABAAEAEAC+AwEAOQABAAEAAAAQAGwEyARFAAEAAwAAARAABQXIBFkAAwAHAAMBAAAeBQAAPQAE
AAoAEQCyA2QAEQDpAGgAEQBeAGwABgZNAHAAVoAOBXMAVoDJAHMAUCAAAAAAhgDEAwYAAQCCIAAA
AACGGCUEBgABAIogAAAAAIMYJQQGAAEAkiAAAAAAkwgRBHcAAQC+IAAAAACTCNEAfAABAMUgAAAA
AJMI3QCBAAEAzSAAAAAAlggzBYcAAgDUIAAAAACGGCUEBgACANwgAAAAAJEYKwSMAAIAAAABAOUC
CQAlBAEAEQAlBAYAGQAlBAoAKQAlBBAAMQAlBBAAOQAlBBAAQQAlBBAASQAlBBAAUQAlBBAAWQAl
BBAAYQAlBBAAaQAlBAYAgQAlBAYAqQAlBBUAuQAlBAYAcQAWBRsAwQD3BCAAyQCdAyUA2QBOBSsA
0QDbAjAAwQA/BQEAcQAlBAYAiQAlBAYA4QCJADUA4QBWBTwAkQAlBEEAsQAlBAYACAAUAFoACAAY
AF8AKQBzAMcALgALAJ8ALgATAKgALgAbAMcALgAjANAALgArAPkALgAzAPkALgA7APkALgBDANAA
LgBLAP8ALgBTAPkALgBbABYBQwBjAF8ASQBzAMcAYQB7AF8AYwBrAF8AAwABAAQAAwAAABUEkAAA
APEAlQAAADcFmgACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAANAkUmUAAAAAAAABAAAA
BAAAAAAAAAAAAAAASABVAAAAAAAQAAAAAAAAAAAAAABRAAUDAAAAAAQAAAAAAAAAAAAAAEgApgMA
AAAAEAAAAAAAAAAAAAAAUQAuAAAAAAAAAAAAAQAAAHYEAAAFAAIAAAAAU1RfNTkwYjZjMzA3YWY2
NGY3YjljN2M0ZWRmYmU3YmVmNzcAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5D
b21wb25lbnRNb2RlbABTVF81OTBiNmMzMDdhZjY0ZjdiOWM3YzRlZGZiZTdiZWY3Ny5kbGwAZ2V0
X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzU5MGI2YzMwN2Fm
NjRmN2I5YzdjNGVkZmJlN2JlZjc3LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF81OTBiNmMzMDdhZjY0ZjdiOWM3YzRlZGZiZTdiZWY3Ny5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2Jq
ZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AAAAIVUA
cwBlAHIAOgA6AFIAdQBuAHQAaQBtAGUARQBuAGQAAHFTAFQAXwA1ADkAMABiADYAYwAzADAANwBh
AGYANgA0AGYANwBiADkAYwA3AGMANABlAGQAZgBiAGUANwBiAGUAZgA3ADcALgBQAHIAbwBwAGUA
cgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAB8MCurilfxAgshkSGxDzDoABCABAQgD
IAABBSABARERBCABAQ4FIAEBEVEEIAASYQQgABJlBSABEmkcBAAAEW0EIAEBHAYAARJxEXUEIAAS
eQYgAgEOEnkIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSSQMGEk0DBhIQAgYIAwYRFAQA
ABJJBAAAEk0FAAEBEk0EAAASEAMAAAEECAASSQQIABJNBAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzU5MGI2YzMwN2FmNjRmN2I5Yzdj
NGVkZmJlN2JlZjc3AAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjUAAE0BABwuTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNy4yAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRQuTkVUIEZyYW1ld29y
ayA0LjcuMrQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAABgLQAAAAAAAAAAAAB6LQAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAbC0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAUmXQJAAAAQBSZdAkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA1ADkAMABiADYAYwAzADAANwBhAGYANgA0AGYANwBiADkAYwA3AGMANABlAGQA
ZgBiAGUANwBiAGUAZgA3ADcAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4AOQA0ADIANAAuADIANQA5ADMAOAAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwA1ADkAMABiADYAYwAzADAANwBhAGYANgA0AGYANwBiADkAYwA3AGMANABlAGQAZgBi
AGUANwBiAGUAZgA3ADcALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADUAOQAwAGIANgBjADMAMAA3AGEAZgA2ADQAZgA3AGIAOQBjADcAYwA0
AGUAZABmAGIAZQA3AGIAZQBmADcANwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA1ADkAMABiADYAYwAzADAANwBhAGYANgA0AGYANwBiADkAYwA3AGMANABl
AGQAZgBiAGUANwBiAGUAZgA3ADcAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADkANAAyADQALgAyADUAOQAzADgAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADkANAAyADQALgAyADUAOQAzADgAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAjD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Set RuntimeStart Variable"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{A78217B1-7BA9-43C7-9CF1-A75849A9B293}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Set RuntimeStart Variable"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_56a92576b9694e008c111f33e5558119"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::RuntimeStart">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
#endregion

namespace ST_56a92576b9694e008c111f33e5558119
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // Set the runtime start variable
            Dts.Variables["User::RuntimeStart"].Value = DateTime.Now;
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_56a92576b9694e008c111f33e5558119.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{f865fc68-5256-4295-a688-40d6f63190d0}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_56a92576b9694e008c111f33e5558119</RootNamespace>
    <AssemblyName>ST_56a92576b9694e008c111f33e5558119</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_56a92576b9694e008c111f33e5558119</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_56a92576b9694e008c111f33e5558119</msb:DisplayName>
    <msb:ProjectId>{48FF7588-10B7-4F44-B672-311DC676369A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_56a92576b9694e008c111f33e5558119.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_56a92576b9694e008c111f33e5558119.Properties.Settings.get_Default():ST_56a92576b9694e008c111f33e5558119.Properties.Sett" +
    "ings")]

namespace ST_56a92576b9694e008c111f33e5558119.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_56a92576b9694e008c111f33e5558119")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_56a92576b9694e008c111f33e5558119")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_56a92576b9694e008c111f33e5558119.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_56a92576b9694e008c111f33e5558119.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_56a92576b9694e008c111f33e5558119.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_56a92576b9694e008c111f33e5558119.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_56a92576b9694e008c111f33e5558119.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_56a92576b9694e008c111f33e5558119.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALYC92gAAAAAAAAAAOAAIiALATAAAA4AAAAIAAAAAAAAii0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAADgtAABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAkA0AAAAgAAAADgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAQAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAFgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABs
LQAAAAAAAEgAAAACAAUA6CAAAJgLAAABAAAAAAAAAIAsAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAMYCKBAAAApvEQAACnIBAABwbxIAAAooEwAACowbAAABbxQA
AAoCKBAAAAoWbxUAAAoqHgIoFgAACioeAigXAAAKKq5+AQAABC0ecicAAHDQAwAAAigYAAAKbxkA
AApzGgAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKBsAAAoqLnMIAAAGgAMA
AAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAvAMAACN+AAAoBAAAZAUAACNT
dHJpbmdzAAAAAIwJAACcAAAAI1VTACgKAAAQAAAAI0dVSUQAAAA4CgAAYAEAACNCbG9iAAAAAAAA
AAIAAAFXHaABCQMAAAD6ATMAFgAAAQAAAB4AAAAFAAAABgAAAAkAAAABAAAAGwAAAAIAAAAQAAAA
AgAAAAMAAAAEAAAAAQAAAAQAAAABAAAAAQAAAAAAdQMBAAAAAAAGAC4CRQQGAL0CRQQGAHoBMgQP
ALkEAAAGAKcB8wMGABEC8wMGAPIB8wMGAKQC8wMGAE4C8wMGAGcC8wMGAL4B8wMGANkB6wIKAIIC
JAMKAPkAJAMGAK0DpgMGAF0BMgQGACwFpgMGABUEZQQGAAUE3gMOAC0BXwMOAI4BXwMOABUByQMG
AEIBRQQKAE0DJAMSAPsEpAASAG4ApAAGAJsApgMGAMQApgMGAHcApgMGAFoF8wMAAAAAJQAAAAAA
AQABAAEAEAC+AwEAOQABAAEAAAAQAGwEyARFAAEAAwAAARAABQXIBFkAAwAHAAMBAAAeBQAAPQAE
AAoAEQCyA2QAEQDpAGgAEQBeAGwABgZNAHAAVoAOBXMAVoDJAHMAUCAAAAAAhgDEAwYAAQCCIAAA
AACGGCUEBgABAIogAAAAAIMYJQQGAAEAkiAAAAAAkwgRBHcAAQC+IAAAAACTCNEAfAABAMUgAAAA
AJMI3QCBAAEAzSAAAAAAlggzBYcAAgDUIAAAAACGGCUEBgACANwgAAAAAJEYKwSMAAIAAAABAOUC
CQAlBAEAEQAlBAYAGQAlBAoAKQAlBBAAMQAlBBAAOQAlBBAAQQAlBBAASQAlBBAAUQAlBBAAWQAl
BBAAYQAlBBAAaQAlBAYAgQAlBAYAqQAlBBUAuQAlBAYAcQAWBRsAwQD3BCAAyQCdAyUA2QBOBSsA
0QDbAjAAwQA/BQEAcQAlBAYAiQAlBAYA4QCJADUA4QBWBTwAkQAlBEEAsQAlBAYACAAUAFoACAAY
AF8AKQBzAMcALgALAJ8ALgATAKgALgAbAMcALgAjANAALgArAPkALgAzAPkALgA7APkALgBDANAA
LgBLAP8ALgBTAPkALgBbABYBQwBjAF8ASQBzAMcAYQB7AF8AYwBrAF8AAwABAAQAAwAAABUEkAAA
APEAlQAAADcFmgACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAANAkc6AAAAAAAAABAAAA
BAAAAAAAAAAAAAAASABVAAAAAAAQAAAAAAAAAAAAAABRAAUDAAAAAAQAAAAAAAAAAAAAAEgApgMA
AAAAEAAAAAAAAAAAAAAAUQAuAAAAAAAAAAAAAQAAAHYEAAAFAAIAAAAAU1RfNTZhOTI1NzZiOTY5
NGUwMDhjMTExZjMzZTU1NTgxMTkAPE1vZHVsZT4ATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAHZhbHVlX18AbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBl
SGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAERhdGVUaW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRz
LlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3Vs
dHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UA
RWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0
dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRl
AFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUA
QXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmli
dXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBT
U0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAHNldF9WYWx1ZQB2YWx1ZQBTeXN0ZW0uUnVu
dGltZS5WZXJzaW9uaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5D
b21wb25lbnRNb2RlbABTVF81NmE5MjU3NmI5Njk0ZTAwOGMxMTFmMzNlNTU1ODExOS5kbGwAZ2V0
X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJh
dGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBDdWx0dXJlSW5mbwBn
ZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzU2YTkyNTc2Yjk2
OTRlMDA4YzExMWYzM2U1NTU4MTE5LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF81NmE5MjU3NmI5Njk0ZTAwOGMxMTFmMzNlNTU1ODExOS5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3VjY2VzcwBnZXRfRHRzAFNjcmlwdFJlc3VsdHMAT2Jq
ZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9Ob3cAZ2V0X0Fzc2VtYmx5AAAAJVUA
cwBlAHIAOgA6AFIAdQBuAHQAaQBtAGUAUwB0AGEAcgB0AABxUwBUAF8ANQA2AGEAOQAyADUANwA2
AGIAOQA2ADkANABlADAAMAA4AGMAMQAxADEAZgAzADMAZQA1ADUANQA4ADEAMQA5AC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAABYNboC5BtBR5M/zMQ0mdoaAAQg
AQEIAyAAAQUgAQEREQQgAQEOBSABARFRBCAAEmEEIAASZQUgARJpHAQAABFtBCABARwGAAEScRF1
BCAAEnkGIAIBDhJ5CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGEkkDBhJNAwYSEAIGCAMG
ERQEAAASSQQAABJNBQABARJNBAAAEhADAAABBAgAEkkECAASTQQIABIQCAEACAAAAAAAHgEAAQBU
AhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTVF81NmE5MjU3NmI5Njk0ZTAw
OGMxMTFmMzNlNTU1ODExOQAABQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDI1AABJAQAaLk5FVEZy
YW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3
b3JrIDQuN7QAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAABgLQAAAAAAAAAAAAB6LQAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAbC0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAA
AAAASAAAAFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYA
TwAAAAAAvQTv/gAAAQAAAAEAc6DQJAAAAQBzoNAkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAA
AEQAAAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkA
bwBuAAAAAAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAw
ADAAMAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAA
YQBuAHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBu
AAAAAABTAFQAXwA1ADYAYQA5ADIANQA3ADYAYgA5ADYAOQA0AGUAMAAwADgAYwAxADEAMQBmADMA
MwBlADUANQA1ADgAMQAxADkAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAw
AC4AOQA0ADIANAAuADQAMQAwADcANQAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUA
AABTAFQAXwA1ADYAYQA5ADIANQA3ADYAYgA5ADYAOQA0AGUAMAAwADgAYwAxADEAMQBmADMAMwBl
ADUANQA1ADgAMQAxADkALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgA
dAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIANQAAACoAAQABAEwAZQBnAGEAbABU
AHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUA
bgBhAG0AZQAAAFMAVABfADUANgBhADkAMgA1ADcANgBiADkANgA5ADQAZQAwADAAOABjADEAMQAx
AGYAMwAzAGUANQA1ADUAOAAxADEAOQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEA
bQBlAAAAAABTAFQAXwA1ADYAYQA5ADIANQA3ADYAYgA5ADYAOQA0AGUAMAAwADgAYwAxADEAMQBm
ADMAMwBlADUANQA1ADgAMQAxADkAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4A
AAAxAC4AMAAuADkANAAyADQALgA0ADEAMAA3ADUAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAg
AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADkANAAyADQALgA0ADEAMAA3ADUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAMAAAAjD0A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{BA7F905B-4949-4772-9A9A-8D87A60E5EE8}"
      DTS:From="Package\Export Main Data"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Set RuntimeEnd Variable" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{E823B918-E76A-4F8B-B448-D5E40ACE18D8}"
      DTS:From="Package\Set RuntimeStart Variable"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Export Main Data" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{89124EB6-9C95-4A74-8735-E30A8F740DEA}"
      DTS:From="Package\Set RuntimeEnd Variable"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Print Summary Log" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="222,42"
          Id="Package\Export Main Data\Export Employees to Flat File"
          TopLeft="11,39" />
        <NodeLayout
          Size="208,42"
          Id="Package\Export Main Data\Export Invoices to Flat File"
          TopLeft="13,159" />
        <NodeLayout
          Size="202,42"
          Id="Package\Export Main Data\Export Orders to Flat File"
          TopLeft="280,40" />
        <NodeLayout
          Size="211,42"
          Id="Package\Export Main Data\Export Products to Flat File"
          TopLeft="282,161" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="515,273"
          Size="515,316"
          Id="Package\Export Main Data"
          TopLeft="183,92" />
        <NodeLayout
          Size="173,42"
          Id="Package\Print Summary Log"
          TopLeft="350.888888888889,513.888888888889" />
        <NodeLayout
          Size="202,42"
          Id="Package\Set RuntimeEnd Variable"
          TopLeft="338.888888888889,441.111111111111" />
        <NodeLayout
          Size="206,42"
          Id="Package\Set RuntimeStart Variable"
          TopLeft="338.888888888889,17.7777777777778" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="440.194444444444,408">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,33.1111111111111"
              Start="0,0"
              End="0,25.6111111111111">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.6111111111111" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="441.194444444444,59.7777777777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.2222222222222"
              Start="0,0"
              End="0,24.7222222222222">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.7222222222222" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="438.638888888889,483.111111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.7777777777778"
              Start="0,0"
              End="0,23.2777777777778">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.2777777777778" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Wrapped in container that forces a transaction.&#xA;all exports occur, or none do if an error occurs."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="195,88"
          Id="960bf11f-90b6-49e1-a3a4-538f4fd13a09"
          TopLeft="705,202" />
        <AnnotationLayout
          Text="Runtime variable used for summary log,&#xA;sets value when package starts running."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="239,56"
          Id="95d2c690-4445-4f3e-adaa-dfc48d25b3cc"
          TopLeft="547,12" />
        <AnnotationLayout
          Text="Another runtime variable for the log,&#xA;sets value when exports have finished."
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="231,56"
          Id="008c6e2c-be30-4ee9-8d4a-eac4b67028e2"
          TopLeft="541,436.888888888889" />
        <AnnotationLayout
          Text="Print out a log"
          ParentId="Package"
          FontInfo="{assembly:Null}"
          Size="105,40"
          Id="4f28c7e0-88ff-4f8f-9bea-eda242d66dde"
          TopLeft="523,516.888888888889" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Export Main Data\Export Employees to Flat File">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="177,42"
          Id="Package\Export Main Data\Export Employees to Flat File\EmployeesData File"
          TopLeft="353,363" />
        <NodeLayout
          Size="185,42"
          Id="Package\Export Main Data\Export Employees to Flat File\Employee Row Count"
          TopLeft="344,266" />
        <NodeLayout
          Size="224,42"
          Id="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table"
          TopLeft="330,162" />
        <EdgeLayout
          Id="Package\Export Main Data\Export Employees to Flat File.Paths[Row Count Output 1]"
          TopLeft="439,308">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export Main Data\Export Employees to Flat File.Paths[OLE DB Source Output]"
          TopLeft="439.25,204">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Grab the data from the sql database via a connection.&#xA;&#xA;Use the employee row count variable in the Row Count object&#xA;to get the amount of rows exported.&#xA;&#xA;Send the sql data to a flat file &amp; assign the value of the user variable."
          ParentId="Package\Export Main Data\Export Employees to Flat File"
          FontInfo="{assembly:Null}"
          Size="392,NaN"
          Id="b0819f2a-f4ef-4906-b9d4-493f382636fc"
          TopLeft="543,235" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export Main Data\Export Employees to Flat File\SQL Server Employees Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Export Main Data\Export Invoices to Flat File">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="163,42"
          Id="Package\Export Main Data\Export Invoices to Flat File\InvoicesData File"
          TopLeft="435,331" />
        <NodeLayout
          Size="171,42"
          Id="Package\Export Main Data\Export Invoices to Flat File\Invoice Row Count"
          TopLeft="435,242" />
        <NodeLayout
          Size="210,42"
          Id="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table"
          TopLeft="412,147" />
        <EdgeLayout
          Id="Package\Export Main Data\Export Invoices to Flat File.Paths[Row Count Output 1]"
          TopLeft="518.5,284">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export Main Data\Export Invoices to Flat File.Paths[OLE DB Source Output]"
          TopLeft="518.75,189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53"
              Start="0,0"
              End="0,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Grab the data from the sql database via a connection.&#xA;&#xA;Use the invoice row count variable in the Row Count object&#xA;to get the amount of rows exported.&#xA;&#xA;Send the sql data to a flat file &amp; assign the value of the user variable."
          ParentId="Package\Export Main Data\Export Invoices to Flat File"
          FontInfo="{assembly:Null}"
          Size="392,NaN"
          Id="810d5de7-3689-415f-a9d8-7977895017cf"
          TopLeft="615,207" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export Main Data\Export Invoices to Flat File\SQL Server Invoices Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Export Main Data\Export Orders to Flat File">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="157,42"
          Id="Package\Export Main Data\Export Orders to Flat File\OrdersData File"
          TopLeft="413,326" />
        <NodeLayout
          Size="203,42"
          Id="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table"
          TopLeft="389,151" />
        <NodeLayout
          Size="164,42"
          Id="Package\Export Main Data\Export Orders to Flat File\Order Row Count"
          TopLeft="407,239" />
        <EdgeLayout
          Id="Package\Export Main Data\Export Orders to Flat File.Paths[Row Count Output 1]"
          TopLeft="490.25,281">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45"
              Start="0,0"
              End="0,37.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export Main Data\Export Orders to Flat File.Paths[OLE DB Source Output]"
          TopLeft="489.75,193">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,46"
              Start="0,0"
              End="0,38.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Grab the data from the sql database via a connection.&#xA;&#xA;Use the order row count variable in the Row Count object&#xA;to get the amount of rows exported.&#xA;&#xA;Send the sql data to a flat file &amp; assign the value of the user variable."
          ParentId="Package\Export Main Data\Export Orders to Flat File"
          FontInfo="{assembly:Null}"
          Size="392,NaN"
          Id="6fed9c70-d55e-4703-afaf-2ce985709372"
          TopLeft="595,208" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export Main Data\Export Orders to Flat File\SQL Server Orders Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Export Main Data\Export Products to Flat File">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="166,42"
          Id="Package\Export Main Data\Export Products to Flat File\ProductsData File"
          TopLeft="398,334" />
        <NodeLayout
          Size="213,42"
          Id="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table"
          TopLeft="378,161" />
        <NodeLayout
          Size="174,42"
          Id="Package\Export Main Data\Export Products to Flat File\Product Row Count"
          TopLeft="397,244" />
        <EdgeLayout
          Id="Package\Export Main Data\Export Products to Flat File.Paths[Row Count Output 1]"
          TopLeft="482.5,286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48"
              Start="0,0"
              End="0,40.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,40.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export Main Data\Export Products to Flat File.Paths[OLE DB Source Output]"
          TopLeft="484.25,203">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,41"
              Start="0,0"
              End="0,33.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <AnnotationLayout
          Text="Grab the data from the sql database via a connection.&#xA;&#xA;Use the product row count variable in the Row Count object&#xA;to get the amount of rows exported.&#xA;&#xA;Send the sql data to a flat file &amp; assign the value of the user variable."
          ParentId="Package\Export Main Data\Export Products to Flat File"
          FontInfo="{assembly:Null}"
          Size="392,NaN"
          Id="ca9b53fb-169a-408a-993e-7404aafdb631"
          TopLeft="588,215" />
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export Main Data\Export Products to Flat File\SQL Server Products Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>
